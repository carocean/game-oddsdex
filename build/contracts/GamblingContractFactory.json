{
  "contractName": "GamblingContractFactory",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "root",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "broker",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "isAllow",
                  "type": "bool"
                },
                {
                  "internalType": "uint8",
                  "name": "payMode",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "time",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ApplyRights",
              "name": "rights",
              "type": "tuple"
            }
          ],
          "indexed": false,
          "internalType": "struct CreateOddsdexContractMessage",
          "name": "e",
          "type": "tuple"
        }
      ],
      "name": "OnCreateOddsdexContract",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "brokers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "contracts",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "contractsOfBroker",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "root",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "broker",
          "type": "address"
        }
      ],
      "name": "getApplyRights",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isAllow",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "payMode",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "internalType": "struct ApplyRights",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "broker",
          "type": "address"
        }
      ],
      "name": "isPaidOfBroker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "broker",
          "type": "address"
        }
      ],
      "name": "isValidBroker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "broker",
          "type": "address"
        }
      ],
      "name": "isExpired",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getAnnualFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getMonthlyFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_annualFee",
          "type": "uint256"
        }
      ],
      "name": "setAnnualFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_monthlyFee",
          "type": "uint256"
        }
      ],
      "name": "setMonthlyFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_broker",
          "type": "address"
        }
      ],
      "name": "createOddsdexContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "recMothlyFee",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "getBrokerCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getOddsdexCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "enumBroker",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "broker",
          "type": "address"
        }
      ],
      "name": "listContractOfBroker",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"root\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isAllow\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"payMode\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"internalType\":\"struct ApplyRights\",\"name\":\"rights\",\"type\":\"tuple\"}],\"indexed\":false,\"internalType\":\"struct CreateOddsdexContractMessage\",\"name\":\"e\",\"type\":\"tuple\"}],\"name\":\"OnCreateOddsdexContract\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"brokers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contracts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contractsOfBroker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_broker\",\"type\":\"address\"}],\"name\":\"createOddsdexContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enumBroker\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAnnualFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"getApplyRights\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isAllow\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"payMode\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"internalType\":\"struct ApplyRights\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBrokerCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMonthlyFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOddsdexCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"isExpired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"isPaidOfBroker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"isValidBroker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"listContractOfBroker\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recMothlyFee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"root\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_annualFee\",\"type\":\"uint256\"}],\"name\":\"setAnnualFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_monthlyFee\",\"type\":\"uint256\"}],\"name\":\"setMonthlyFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/GamblingContractFactory.sol\":\"GamblingContractFactory\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/GamblingContractFactory.sol\":{\"keccak256\":\"0x38a1405f095297c88bd9fdb1a2a2887c1cd3cdb18785156d33e4d888cb8c2d48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://975df646248763b49e14ba6501458946b4f8d6db0b6f63962e345a94b819a2d0\",\"dweb:/ipfs/QmYEUwpiqVAbhfVozgDp3CDqXeGpFTbwJBnYPGX2WoMp9z\"]},\"project:/contracts/IGamblingContractFactory.sol\":{\"keccak256\":\"0x39c75e49c5b9027cb851a462ef6fc1fc2894e4222761f7403201866ed76a803f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52d62461e2071dcfa6709a249bbcc37b196ae748843f98f7f3d837dd9b31f01d\",\"dweb:/ipfs/Qmbk8z4NEXg5ffn1nUZg6VkomugiroaetePFNRswWoc8T9\"]},\"project:/contracts/IOddsdex.sol\":{\"keccak256\":\"0xd7310ffeff06ea83d11860562c13372b76779323a557b31c830d8dd2c6af022a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9ce4081b4a55064220b5c7c0ca12d013c2ed4bd119bf7f87fdae05d71af731c\",\"dweb:/ipfs/QmYBCd3aWVmGnEkcYiiy5xp2UYtKk13vgpwXprUgVPQy9r\"]},\"project:/contracts/OddsdexContract.sol\":{\"keccak256\":\"0x12a82a1d4827c032ae102f09275fcfa0ee7ff381f10b8952dd5eec808167b7e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://facea5662eac22e667855984bf6c4dd5217cade9d3147aa99da58587274ff61c\",\"dweb:/ipfs/QmSLHiM32J5za8ao1WMbxdGR1TWoVmVR5atZRy9UAX5FEX\"]},\"project:/contracts/SafeMath.sol\":{\"keccak256\":\"0x3d3389073e3291a326f11eafff116ffe5f5911db7adc7968fadf416cb70ceaf6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d07dfba0ac92fda4f01346421543aee0bbca542d00a63a09f5a9809dc24755d8\",\"dweb:/ipfs/QmV2ioLUD6giRP83VuGAw6pSCm9ABm26rboaXsucVDVPYh\"]}},\"version\":1}",
  "bytecode": "0x6080604052673a4965bf58a4000060055567058d15e17628000060065534801561002857600080fd5b5060008054600160a060020a031916331790556142908061004a6000396000f3fe60806040526004361062000168576000357c0100000000000000000000000000000000000000000000000000000000900480638082052311620000d8578063be8fabd31162000096578063be8fabd31462000484578063c737edec1462000511578063cca746df1462000547578063d5221cc1146200055e578063e9a3e1691462000583578063ebf0c71714620005ec576200024c565b80638082052314620003bf57806388b89a7d14620003d657806390405a3e14620003fb578063ad450f2a1462000420578063ba2eb5411462000445576200024c565b806338cc4831116200012657806338cc4831146200032b5780633ccfd60b1462000354578063474da79a146200035e578063485327671462000383578063633131b8146200039a576200024c565b806310b47ef3146200029a57806310c0b89914620002bf57806312065fe014620002e65780631214abd014620002fc5780631ec227781462000321576200024c565b366200024c57600554341015620001ef5760405160e560020a62461bcd02815260206004820152603260248201527f546865206665652073686f756c64206265206174206c6561737420657175616c60448201527f20746f2074686520616e6e75616c20666565000000000000000000000000000060648201526084015b60405180910390fd5b60408051606081018252600180825260208083018281524284860190815233600090815260049093529490912083518154925161ffff1990931690151561ff0019161761010060ff90931692909202919091178155925190830155005b60405160e560020a62461bcd02815260206004820152601860248201527f4e6f206f746865722063616c6c7320737570706f7274656400000000000000006044820152606401620001e6565b005b348015620002a757600080fd5b506001545b6040519081526020015b60405180910390f35b348015620002cc57600080fd5b50620002d76200060e565b604051620002b6919062000e99565b348015620002f357600080fd5b503031620002ac565b3480156200030957600080fd5b50620002d76200031b36600462000f00565b62000672565b62000298620006ea565b3480156200033857600080fd5b50305b604051600160a060020a039091168152602001620002b6565b62000298620007c1565b3480156200036b57600080fd5b506200033b6200037d36600462000f25565b620008bc565b3480156200039057600080fd5b50600654620002ac565b348015620003a757600080fd5b506200033b620003b936600462000f3f565b620008e7565b348015620003cc57600080fd5b50600354620002ac565b348015620003e357600080fd5b5062000298620003f536600462000f25565b62000920565b3480156200040857600080fd5b506200033b6200041a36600462000f00565b620009aa565b3480156200042d57600080fd5b50620002986200043f36600462000f25565b62000cae565b3480156200045257600080fd5b506200046a6200046436600462000f00565b62000d38565b60408051921515835260ff909116602083015201620002b6565b3480156200049157600080fd5b5062000502620004a336600462000f00565b604080516060808201835260008083526020808401829052928401819052600160a060020a03949094168452600482529282902082519384018352805460ff808216151586526101009091041691840191909152600101549082015290565b604051620002b6919062000f6c565b3480156200051e57600080fd5b50620005366200053036600462000f00565b62000df4565b6040519015158152602001620002b6565b3480156200055457600080fd5b50600554620002ac565b3480156200056b57600080fd5b506200033b6200057d36600462000f25565b62000e7a565b3480156200059057600080fd5b5062000536620005a236600462000f00565b600160a060020a03166000908152600460209081526040918290208251606081018452815460ff808216151583526101009091041692810192909252600101549101819052151590565b348015620005f957600080fd5b506000546200033b90600160a060020a031681565b606060038054806020026020016040519081016040528092919081815260200182805480156200066857602002820191906000526020600020905b8154600160a060020a0316815260019091019060200180831162000649575b5050505050905090565b600160a060020a038116600090815260026020908152604091829020805483518184028101840190945280845260609392830182828015620006de57602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311620006bf575b50505050509050919050565b600654341015620007675760405160e560020a62461bcd02815260206004820152603360248201527f546865206665652073686f756c64206265206174206c6561737420657175616c60448201527f20746f20746865206d6f6e74686c7920666565000000000000000000000000006064820152608401620001e6565b6040805160608101825260018082526002602080840191825242848601908152336000908152600490925294902092518354915161ffff1990921690151561ff0019161761010060ff909216919091021782559151910155565b600054600160a060020a03163314620007f15760405160e560020a62461bcd028152600401620001e69062000f94565b60008054604080518381526020810191829052600160a060020a03909216913031916200081f919062000fcb565b60006040518083038185875af1925050503d80600081146200085e576040519150601f19603f3d011682016040523d82523d6000602084013e62000863565b606091505b5050905080620008b95760405160e560020a62461bcd02815260206004820152601360248201527f4554485f5452414e534645525f4641494c4544000000000000000000000000006044820152606401620001e6565b50565b60018181548110620008cd57600080fd5b600091825260209091200154600160a060020a0316905081565b600260205281600052604060002081815481106200090457600080fd5b600091825260209091200154600160a060020a03169150829050565b600054600160a060020a03163314620009505760405160e560020a62461bcd028152600401620001e69062000f94565b60008111620009a55760405160e560020a62461bcd02815260206004820152601d60248201527f416e6e75616c206665652063616e6e6f74206265206e656761746976650000006044820152606401620001e6565b600555565b60008054600160a060020a03163314620009db5760405160e560020a62461bcd028152600401620001e69062000f94565b620009e68262000df4565b62000a5f576040805160e560020a62461bcd0281526020600482015260248101919091527f41636365737320746f20626c696e6420626f786573206973206e6f7420616c6c60448201527f6f77656420616e64206d7573742062652070616964206f7220657870697265646064820152608401620001e6565b60008054604051600160a060020a0390911690849062000a7f9062000e8b565b600160a060020a03928316815291166020820152604001604051809103906000f08015801562000ab3573d6000803e3d6000fd5b506001805480820182557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6018054600160a060020a0380851673ffffffffffffffffffffffffffffffffffffffff19928316811790935587166000908152600260209081526040822080549586018155808352908220909401805490921690921790559192508291805b60035481101562000ba25786600160a060020a03166003828154811062000b685762000b6862000ffc565b600091825260209091200154600160a060020a03160362000b8d576001915062000ba2565b8062000b99816200105a565b91505062000b3d565b508062000c0257600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0388161790555b60408051608081018252600160a060020a03808616825233602080840191909152908916828401819052600090815260048252839020835160608181018652825460ff808216151584526101009091041693820193909352600190910154818501529082015290517f9dcb72ef1591797d9ba01e8d7e2e632899cbf3a9ea38467a3f5661df00b43e849062000c9990839062001076565b60405180910390a1509193505050505b919050565b600054600160a060020a0316331462000cde5760405160e560020a62461bcd028152600401620001e69062000f94565b6000811162000d335760405160e560020a62461bcd02815260206004820152601e60248201527f4d6f6e74686c79206665652063616e6e6f74206265206e6567617469766500006044820152606401620001e6565b600655565b600160a060020a03811660009081526004602090815260408083208151606081018352815460ff808216151583526101009091041693810184905260019091015491810182905283929091839190820362000d9a576001969095509350505050565b8060ff1660010362000dc2576301e1338083604001514262000dbd9190620010d8565b101591505b8060ff1660020362000de9576228de8083604001514262000de49190620010d8565b101591505b909590945092505050565b600160a060020a03811660009081526004602090815260408083208151606081018352815460ff80821615158084526101009092041694820194909452600190910154918101919091529062000e4d5750600092915050565b806040015160000362000e635750600092915050565b600062000e708462000d38565b5015949350505050565b60038181548110620008cd57600080fd5b61316c80620010ef83390190565b6020808252825182820181905260009190848201906040850190845b8181101562000edc578351600160a060020a03168352928401929184019160010162000eb5565b50909695505050505050565b8035600160a060020a038116811462000ca957600080fd5b60006020828403121562000f1357600080fd5b62000f1e8262000ee8565b9392505050565b60006020828403121562000f3857600080fd5b5035919050565b6000806040838503121562000f5357600080fd5b62000f5e8362000ee8565b946020939093013593505050565b81511515815260208083015160ff169082015260408083015190820152606081015b92915050565b60208082526018908201527f4f6e6c7920726f6f742063616e2063616c6c20746869732e0000000000000000604082015260600190565b6000825160005b8181101562000fee576020818601810151858301520162000fd2565b506000920191825250919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000600182016200106f576200106f6200102b565b5060010190565b600060c082019050600160a060020a03808451168352806020850151166020840152806040850151166040840152506060830151620010d1606084018280511515825260208082015160ff1690830152604090810151910152565b5092915050565b8181038181111562000f8e5762000f8e6200102b56fe60806040523480156200001157600080fd5b506040516200316c3803806200316c833981016040819052620000349162000158565b60028054600160a060020a0319908116331790915560008054600160a060020a038581166101000261010060a860020a0319909216919091178255600180549185169190931617909155606490655af3107a4000906014906046906200009b828662000190565b6040805160e0810182528681526020810188905260009181018290526060810182905261ffff9586166080820181905294861660a082018190529290951660c090950185905260039590955560049590955550600583905560068390556007805463ffffffff1916909117620100009094029390931765ffff00000000191664010000000090910217909155805460ff1916600117905550620001da9050565b8051600160a060020a03811681146200015357600080fd5b919050565b600080604083850312156200016c57600080fd5b62000177836200013b565b915062000187602084016200013b565b90509250929050565b61ffff828116828216039080821115620001d3577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5092915050565b612f8280620001ea6000396000f3fe60806040526004361061012a576000357c01000000000000000000000000000000000000000000000000000000009004806371f81e9d116100b2578063c53f267011610081578063c53f267014610374578063c865592614610389578063d1314ee01461039e578063ecb891e1146103bc578063f2b6c1561461043357610181565b806371f81e9d146102fd5780638d1d5b3f1461031257806393accf9714610327578063c04062261461035557610181565b806325903933116100f9578063259039331461024b5780633471b3371461026e5780635c3917d4146102915780635ca1e165146102b15780636949c0b2146102e857610181565b806303cd5c59146101cc57806307da68f5146101df578063143025fd146101fb5780632014e5d11461022757610181565b366101815760405160e560020a62461bcd02815260206004820152601860248201527f4e6f206f746865722063616c6c7320737570706f72746564000000000000000060448201526064015b60405180910390fd5b005b60405160e560020a62461bcd02815260206004820152601860248201527f4e6f206f746865722063616c6c7320737570706f7274656400000000000000006044820152606401610176565b61017f6101da3660046128de565b610448565b3480156101eb57600080fd5b5061017f6000805460ff19169055565b34801561020757600080fd5b5061021061060f565b60405161021e9291906129c6565b60405180910390f35b34801561023357600080fd5b5060005460ff165b604051901515815260200161021e565b34801561025757600080fd5b5061026061062b565b60405161021e9291906129e1565b34801561027a57600080fd5b5061028361064a565b60405190815260200161021e565b34801561029d57600080fd5b5061023b6102ac366004612a2b565b610663565b3480156102bd57600080fd5b506000546101009004600160a060020a03165b604051600160a060020a03909116815260200161021e565b3480156102f457600080fd5b5061028361072b565b34801561030957600080fd5b50610283610739565b34801561031e57600080fd5b5061017f610747565b34801561033357600080fd5b50610347610342366004612a46565b610826565b60405161021e929190612a61565b34801561036157600080fd5b5061017f6000805460ff19166001179055565b34801561038057600080fd5b506102836109f9565b34801561039557600080fd5b50610210610a10565b3480156103aa57600080fd5b50600154600160a060020a03166102d0565b3480156103c857600080fd5b506103d1610a24565b60405161021e9190600060e08201905082518252602083015160208301526040830151604083015260608301516060830152608083015161ffff80821660808501528060a08601511660a08501528060c08601511660c0850152505092915050565b34801561043f57600080fd5b50610260610ac7565b60005460ff1661049d5760405160e560020a62461bcd02815260206004820152601360248201527f6f646473646578206861732073746f70706564000000000000000000000000006044820152606401610176565b60008260028111156104b1576104b161291a565b036105015760405160e560020a62461bcd02815260206004820152601b60248201527f427579696e6720646972656374696f6e20697320756e6b6e6f776e00000000006044820152606401610176565b60035460009061051c906105159086610adb565b3490610b85565b60055490915061052c9082610bc7565b60055560065461053c9034610bc7565b600655604080514260208083019190915244828401528251808303840181526060830180855281519190920120610180830190935282815233608083015260a082018490523460c083015260e08201879052600454610100830152600091610120018660028111156105b0576105b061291a565b81526020015a81526020018563ffffffff1681525090506105d081610c29565b7f67ff9f7ebf0786f0383127a22a0f947768f85d4ad4c7a4fe559ade9bab63eeb9816040516105ff9190612a78565b60405180910390a1505050505050565b600061061961281f565b6106236002610d78565b915091509091565b600061063561286b565b61063f6002610f7e565b919491935090915050565b600061065860016000611248565b63ffffffff16905090565b60008060006106726001610d78565b915091508163ffffffff1663ffffffff03610691575060009392505050565b60008061069e6002610d78565b915091508163ffffffff1663ffffffff036106bf5750600095945050505050565b60018660028111156106d3576106d361291a565b036106ef57806080015183608001511115945050505050919050565b60028660028111156107035761070361291a565b0361071f57826080015181608001511115945050505050919050565b50600095945050505050565b600061065860006001611248565b600061065860006002611248565b600154600160a060020a031633146107a45760405160e560020a62461bcd02815260206004820152601a60248201527f4f6e6c792062726f6b65722063616e2063616c6c20746869732e0000000000006044820152606401610176565b60005460ff166107f95760405160e560020a62461bcd02815260206004820152601360248201527f6f646473646578206861732073746f70706564000000000000000000000000006044820152606401610176565b6000610803611425565b9150505b61081081610663565b156108235761081e816117a0565b610807565b50565b600061083061281f565b6000805b60208163ffffffff1610156109e45760006109088263ffffffff166020811061085f5761085f612a87565b602081049091015460ff601f9092166101000a900416905060005b60088160ff1610156109cf576000610893826002612ba0565b831660ff1690506108a5826002612ba0565b8160ff16036109bc578763ffffffff168563ffffffff16036109ae576001600860ff84166108d38783612baf565b6108dd9190612bd7565b63ffffffff1661010081106108f4576108f4612a87565b604080516101208101825260099290920292909201805482526001810154600160a060020a03166020830152600280820154938301939093526003810154606083015260048101546080830152600581015460a083015260068101549092839160c084019160ff9091169081111561096e5761096e61291a565b600281111561097f5761097f61291a565b81526007820154602082015260089091015463ffffffff16604090910152919a91995090975050505050505050565b846109b881612bfb565b9550505b50806109c781612c1e565b91505061087a565b505080806109dc90612bfb565b915050610834565b506109ed61281f565b60009590945092505050565b600454600354600091610a0b91612c3d565b905090565b6000610a1a61281f565b6106236001610d78565b610a706040518060e0016040528060008152602001600081526020016000815260200160008152602001600061ffff168152602001600061ffff168152602001600061ffff1681525090565b506040805160e0810182526003548152600454602082015260055491810191909152600654606082015260075461ffff8082166080840152620100008204811660a08401526401000000009091041660c082015290565b6000610ad161286b565b61063f6001610f7e565b600082600003610aed57506000610b7f565b6000610af98385612c3d565b905082610b068583612c6d565b14610b7c5760405160e560020a62461bcd02815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60448201527f77000000000000000000000000000000000000000000000000000000000000006064820152608401610176565b90505b92915050565b6000610b7c83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611bfb565b600080610bd48385612c81565b905083811015610b7c5760405160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610176565b6000610c33611c37565b90508063ffffffff1663ffffffff03610c915760405160e560020a62461bcd02815260206004820152601e60248201527f5374616b652042696c6c2041727261792073706163652069732066756c6c00006044820152606401610176565b8160088263ffffffff166101008110610cac57610cac612a87565b600902016000820151816000015560208201518160010160006101000a815481600160a060020a030219169083600160a060020a0316021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690836002811115610d3957610d3961291a565b021790555060e08201516007820155610100909101516008909101805463ffffffff191663ffffffff909216919091179055610d7481611d0f565b5050565b6000610d8261281f565b610d8a61281f565b63ffffffff925060005b60208163ffffffff161015610f755760006109088263ffffffff1660208110610dbf57610dbf612a87565b602081049091015460ff601f9092166101000a900416905060005b60088160ff161015610f60576000610df3826002612ba0565b831660ff169050610e05826002612ba0565b8160ff1603610f4c57600860ff8316610e1e8683612baf565b610e289190612bd7565b63ffffffff166101008110610e3f57610e3f612a87565b604080516101208101825260099290920292909201805482526001810154600160a060020a03166020830152600280820154938301939093526003810154606083015260048101546080830152600581015460a083015260068101549192909160c084019160ff90911690811115610eb957610eb961291a565b6002811115610eca57610eca61291a565b81526007820154602082015260089091015463ffffffff166040909101529550876002811115610efc57610efc61291a565b8660c001516002811115610f1257610f1261291a565b14610f1d5750610f4e565b846080015186608001511115610f4c5785945060ff8216610f3f856008612baf565b610f499190612bd7565b96505b505b80610f5881612c1e565b915050610dda565b50508080610f6d90612bfb565b915050610d94565b50919391925050565b6000610f88612898565b610f9061286b565b60005b60208163ffffffff16101561122c5760006109088263ffffffff1660208110610fbe57610fbe612a87565b602081049091015460ff601f9092166101000a900416905060005b60088160ff161015611217576000610ff2826002612ba0565b831660ff169050611004826002612ba0565b8160ff1603611203576000600860ff841661101f8783612baf565b6110299190612bd7565b63ffffffff16610100811061104057611040612a87565b604080516101208101825260099290920292909201805482526001810154600160a060020a03166020830152600280820154938301939093526003810154606083015260048101546080830152600581015460a083015260068101549192909160c084019160ff909116908111156110ba576110ba61291a565b60028111156110cb576110cb61291a565b81526007820154602082015260089091015463ffffffff1660409091015290508860028111156110fd576110fd61291a565b8160c0015160028111156111135761111361291a565b1461111f575050611205565b8551608090810151908201511015611138575050611205565b60056000611147600183612c94565b90505b6000198113156111ff5787816005811061116657611166612a87565b602002015160800151836080015111156111ed57809150611188898984611db3565b8288836005811061119b5761119b612a87565b602002015260ff85166111af886008612baf565b6111b99190612bd7565b8983600581106111cb576111cb612a87565b63ffffffff9092166020929092020152896111e581612bfb565b9a50506111ff565b806111f781612ca7565b91505061114a565b5050505b505b8061120f81612c1e565b915050610fd9565b5050808061122490612bfb565b915050610f93565b5060058363ffffffff16111561124157600592505b9193909250565b600080805b60208163ffffffff16101561141d5760006109088263ffffffff166020811061127857611278612a87565b602081049091015460ff601f9092166101000a900416905060005b60088160ff1610156114085760006112ac826002612ba0565b831660ff1690506112be826002612ba0565b8160ff16036113f4576000600860ff84166112d98783612baf565b6112e39190612bd7565b63ffffffff1661010081106112fa576112fa612a87565b604080516101208101825260099290920292909201805482526001810154600160a060020a03166020830152600280820154938301939093526003810154606083015260048101546080830152600581015460a083015260068101549192909160c084019160ff909116908111156113745761137461291a565b60028111156113855761138561291a565b81526007820154602082015260089091015463ffffffff166040909101529050881580156113d957508760028111156113c0576113c061291a565b8160c0015160028111156113d6576113d661291a565b14155b156113e55750506113f6565b856113ef81612bfb565b965050505b505b8061140081612c1e565b915050611293565b5050808061141590612bfb565b91505061124d565b509392505050565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101919091526000600a4244604051602001611486929190918252602082015260400190565b60408051601f1981840301815291905280516020909101206114a89190612ce0565b60ff168083526040805142602080830191909152448284015260f860020a909302606082015281516041818303018152606190910190915280519101206114f190600a90612ce0565b60ff90811660208481018290528451604080514281850152448183015260f860020a929095168202606086015292026061840152815180840360420181526062909301909152815191012061154890600a90612ce0565b60ff9081166040848101829052845160208087015183514281840152448186015260f860020a9387168402606082015295168202606186015292026062840152805180840360430181526063909301905281519101206115aa90600a90612ce0565b60ff9081166060848101829052845160208087015160408089015181514281860152448184015260f860020a9589168602968101969096529187168402606186015295168202606284015292026063820152825160448183030181526064909101909252815191012061161f90600a90612ce0565b60ff16608083015260006116336001611e50565b905060006116416002611e50565b60408051426020820152449181019190915260608101849052909150600a9060800160408051601f1981840301815291905280516020909101206116859190612ce0565b60ff1660a085015260408051426020820152449181019190915260608101829052600a9060800160408051601f1981840301815291905280516020909101206116ce9190612ce0565b60ff90811660c0860181905285516020808801516040808a01516060808c015160808d015160a08e0151855142818a01524481880152988b1660f860020a908102948a0194909452958a1683026061890152928916820260628801528816810260638701529087168102606486015291909516810260658401529092026066820152825160478183030181526067909101909252815191012060009061177690600290612ce0565b60e08601819052905060018190036117945750929360019350915050565b50929360029350915050565b6000806117ad6001610d78565b915091508163ffffffff1663ffffffff036117c757505050565b6000806117d46002610d78565b915091508163ffffffff1663ffffffff036117f0575050505050565b6117f984612029565b61180282612029565b61186560405180610160016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008019168152602001600081526020016000815260200160008152602001600080191681525090565b611877846040015183604001516120a6565b8152608080830151908501516118999160029161189391610bc7565b90610b85565b6020820152805160408501516118ae916120bd565b6040808301919091528151908301516118c6916120bd565b6060820152600354608085015160408301516118ed92916118e79190610adb565b90610adb565b60808083019190915260035490830151606083015161191192916118e79190610adb565b60a082015260408101511561193d57608081015160608501526040808201519085015261193d84610c29565b6060810151156119665760a0810151606080840191909152810151604083015261196682610c29565b6003546020820151825161197f92916118e79190610adb565b60e08201526080808201516003549186015160408701516119af936119a99290916118e791610adb565b906120bd565b61010082015260a0810151600354608084015160408501516119db93926119a99290916118e791610adb565b61012082015260408051426020820152449181019190915260600160408051601f19818403018152919052805160209091012060c08201819052610100820151611a269190866120ff565b611a3a8160c00151826101200151846120ff565b6001866002811115611a4e57611a4e61291a565b03611a6b57611a668160c001518260e0015186612336565b611a97565b6002866002811115611a7f57611a7f61291a565b03611a9757611a668160c001518260e0015184612336565b6020810151600455805160058054600090611ab3908490612c94565b909155505060408051426020820152449181019190915260600160405160208183030381529060405280519060200120816101400181815250506000604051806101e00160405280836101400151815260200186600001518152602001846000015181526020018360c001518152602001600160009054906101000a9004600160a060020a0316600160a060020a0316815260200183600001518152602001836020015181526020018360400151815260200183606001518152602001836080015181526020018360a001518152602001836101000151815260200183610120015181526020018360e001518152602001886002811115611bb657611bb661291a565b81525090507f1ea5d61fc6547651d1da2473a4367de75ba86fa242234a737008287f52d7913c81604051611bea9190612cf4565b60405180910390a150505050505050565b60008183611c1f5760405160e560020a62461bcd0281526004016101769190612dd1565b506000611c2c8486612c6d565b9150505b9392505050565b600063ffffffff81805b60208163ffffffff161015611d075760006109088263ffffffff1660208110611c6c57611c6c612a87565b602081049091015460ff601f9092166101000a900416905060005b60088160ff161015611ce7576000611ca0826002612ba0565b8360ff1616905080600003611cd45760ff8216611cbe856008612baf565b611cc89190612bd7565b95506001945050611ce7565b5080611cdf81612c1e565b915050611c87565b508215611cf45750611d07565b5080611cff81612bfb565b915050611c41565b509092915050565b6000611d1c600883612e04565b90506000611d2b600884612e27565b905060006109088363ffffffff1660208110611d4957611d49612a87565b602081049091015460ff601f9092166101000a9004169050611d6c826002612e4a565b60ff909116178061090863ffffffff851660208110611d8d57611d8d612a87565b602091828204019190066101000a81548160ff021916908360ff16021790555050505050565b60015b818111611e4a57828160058110611dcf57611dcf612a87565b602002015183611de0600184612c94565b60058110611df057611df0612a87565b6020020152838160058110611e0757611e07612a87565b602002015184611e18600184612c94565b60058110611e2857611e28612a87565b63ffffffff909216602092909202015280611e4281612e5c565b915050611db6565b50505050565b6000805b60208163ffffffff1610156120235760006109088263ffffffff1660208110611e7f57611e7f612a87565b602081049091015460ff601f9092166101000a900416905060005b60088160ff16101561200e576000611eb3826002612ba0565b831660ff169050611ec5826002612ba0565b8160ff1603611ffa576000600860ff8416611ee08783612baf565b611eea9190612bd7565b63ffffffff166101008110611f0157611f01612a87565b604080516101208101825260099290920292909201805482526001810154600160a060020a03166020830152600280820154938301939093526003810154606083015260048101546080830152600581015460a083015260068101549192909160c084019160ff90911690811115611f7b57611f7b61291a565b6002811115611f8c57611f8c61291a565b81526007820154602082015260089091015463ffffffff166040909101529050866002811115611fbe57611fbe61291a565b8160c001516002811115611fd457611fd461291a565b14611fe0575050611ffc565b610100810151611ff69063ffffffff1687612c81565b9550505b505b8061200681612c1e565b915050611e9a565b5050808061201b90612bfb565b915050611e54565b50919050565b6000612036600883612e04565b90506000612045600884612e27565b905060006109088363ffffffff166020811061206357612063612a87565b602081049091015460ff601f9092166101000a9004169050612086826002612e4a565b191660ff168061090863ffffffff851660208110611d8d57611d8d612a87565b6000818311156120b65781610b7c565b5090919050565b6000610b7c83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506127eb565b8160000361210c57505050565b60208181015160408051600080825293810191829052919291600160a060020a03841691869161213b91612e75565b60006040518083038185875af1925050503d8060008114612178576040519150601f19603f3d011682016040523d82523d6000602084013e61217d565b606091505b5050905080848360405160200161222a9291907f4554485f5452414e534645525f4641494c45443a20526566756e6420746f207081527f616c7965722e20526566756e6420636f7374733a200000000000000000000000602082015260358101929092527f2c20706c617965723a20000000000000000000000000000000000000000000006055830152600160a060020a03166c0100000000000000000000000002605f82015260730190565b6040516020818303038152906040529061225a5760405160e560020a62461bcd0281526004016101769190612dd1565b5060004244604051602001612279929190918252602082015260400190565b60405160208183030381529060405280519060200120905060006040518060a001604052808381526020018660000151815260200188815260200185600160a060020a031681526020018781525090507f18fb24206513f6983861e5acad39384526cb897f511f911740263279449125bc81604051611bea9190600060a082019050825182526020830151602083015260408301516040830152600160a060020a0360608401511660608301526080830151608083015292915050565b60208101516007546000906123579060649061189390879061ffff16610adb565b9050600061236585836120bd565b60075490915060009061238a9060649061189390869062010000900461ffff16610adb565b9050600061239884836120bd565b6040805160008082526020820192839052929350600160a060020a0388169186916123c291612e75565b60006040518083038185875af1925050503d80600081146123ff576040519150601f19603f3d011682016040523d82523d6000602084013e612404565b606091505b505090508084876040516020016124b19291907f4554485f5452414e534645525f4641494c45443a2073706c6974207072697a6581527f20746f2070616c7965722e20626f6e75733a2000000000000000000000000000602082015260338101929092527f2c20706c617965723a20000000000000000000000000000000000000000000006053830152600160a060020a03166c0100000000000000000000000002605d82015260710190565b604051602081830303815290604052906124e15760405160e560020a62461bcd0281526004016101769190612dd1565b50600154604080516000808252602082019283905292600160a060020a031691869161250c91612e75565b60006040518083038185875af1925050503d8060008114612549576040519150601f19603f3d011682016040523d82523d6000602084013e61254e565b606091505b5050905080856040516020016125b691907f4554485f5452414e534645525f4641494c45443a2073706c6974207072697a6581527f20746f2062726f6b65722e2062726f6b65726167653a200000000000000000006020820152603781019190915260570190565b604051602081830303815290604052906125e65760405160e560020a62461bcd0281526004016101769190612dd1565b50600080546040805183815260208101909152610100909104600160a060020a03169085906040516126189190612e75565b60006040518083038185875af1925050503d8060008114612655576040519150601f19603f3d011682016040523d82523d6000602084013e61265a565b606091505b5050905080866040516020016126c291907f4554485f5452414e534645525f4641494c45443a2073706c6974207072697a6581527f20746f20726f6f742e207461783a2000000000000000000000000000000000006020820152602f810191909152604f0190565b604051602081830303815290604052906126f25760405160e560020a62461bcd0281526004016101769190612dd1565b5060004244604051602001612711929190918252602082015260400190565b60408051601f198184030181528282528051602091820120610180840183528084528d51918401919091528282018f9052600160a060020a038c16606084015260075461ffff8082166080860152620100008204811660a08601526401000000009091041660c084015260e083018e905261010083018a905261012083018b90526101408301899052610160830188905290519092507f8c77d17dfdf762b972b90fefbcc2031d1494f3414de7f55a6b70d7c1b4c3a9d9906127d4908390612e91565b60405180910390a150505050505050505050505050565b600081848411156128125760405160e560020a62461bcd0281526004016101769190612dd1565b506000611c2c8486612c94565b6040805161012081018252600080825260208201819052918101829052606081018290526080810182905260a081018290529060c0820190815260006020820181905260409091015290565b6040518060a001604052806005905b61288261281f565b81526020019060019003908161287a5790505090565b6040518060a001604052806005906020820280368337509192915050565b8035600381106128c557600080fd5b919050565b803563ffffffff811681146128c557600080fd5b6000806000606084860312156128f357600080fd5b83359250612903602085016128b6565b9150612911604085016128ca565b90509250925092565b60e060020a634e487b7102600052602160045260246000fd5b600381106129545760e060020a634e487b7102600052602160045260246000fd5b9052565b80518252600160a060020a03602082015116602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c08101516129a960c0840182612933565b5060e081810151908301526101009081015163ffffffff16910152565b63ffffffff831681526101408101611c306020830184612958565b63ffffffff831681526105c0810160208083018460005b6005811015612a2057612a0c838351612958565b6101209290920191908301906001016129f8565b505050509392505050565b600060208284031215612a3d57600080fd5b610b7c826128b6565b600060208284031215612a5857600080fd5b610b7c826128ca565b82151581526101408101611c306020830184612958565b6101208101610b7f8284612958565b60e060020a634e487b7102600052603260045260246000fd5b60e060020a634e487b7102600052601160045260246000fd5b600181815b80851115612af6578160001904821115612ada57612ada612aa0565b80851615612ae757918102915b60029094049390800290612abe565b509250929050565b600082612b0d57506001610b7f565b81612b1a57506000610b7f565b8160018114612b305760028114612b3a57612b57565b6001915050610b7f565b60ff841115612b4b57612b4b612aa0565b8360020a915050610b7f565b5060208310610133831016604e8410600b8410161715612b7a575081810a610b7f565b612b848383612ab9565b8060001904821115612b9857612b98612aa0565b029392505050565b6000610b7c60ff841683612afe565b63ffffffff818116838216028082169190828114612bcf57612bcf612aa0565b505092915050565b63ffffffff818116838216019080821115612bf457612bf4612aa0565b5092915050565b600063ffffffff808316818103612c1457612c14612aa0565b6001019392505050565b600060ff821660ff8103612c3457612c34612aa0565b60010192915050565b8082028115828204841417610b7f57610b7f612aa0565b60e060020a634e487b7102600052601260045260246000fd5b600082612c7c57612c7c612c54565b500490565b80820180821115610b7f57610b7f612aa0565b81810381811115610b7f57610b7f612aa0565b60007f80000000000000000000000000000000000000000000000000000000000000008203612cd857612cd8612aa0565b506000190190565b600082612cef57612cef612c54565b500690565b60006101e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151612d396080840182600160a060020a03169052565b5060a0838101519083015260c0808401519083015260e08084015190830152610100808401519083015261012080840151908301526101408084015190830152610160808401519083015261018080840151908301526101a080840151908301526101c080840151612bcf82850182612933565b60005b83811015612dc8578181015183820152602001612db0565b50506000910152565b6020815260008251806020840152612df0816040850160208701612dad565b601f01601f19169190910160400192915050565b600063ffffffff80841680612e1b57612e1b612c54565b92169190910492915050565b600063ffffffff80841680612e3e57612e3e612c54565b92169190910692915050565b6000610b7c63ffffffff841683612afe565b600060018201612e6e57612e6e612aa0565b5060010190565b60008251612e87818460208701612dad565b9190910192915050565b6000610180820190508251825260208301516020830152604083015160408301526060830151612ecc6060840182600160a060020a03169052565b506080830151612ee2608084018261ffff169052565b5060a0830151612ef860a084018261ffff169052565b5060c0830151612f0e60c084018261ffff169052565b5060e083810151908301526101008084015190830152610120808401519083015261014080840151908301526101609283015192909101919091529056fea264697066735822122073183e6481f981982f875ffc8796f2010e82b31bf71d07da5b222637a2a79ad564736f6c63430008130033a264697066735822122005f234d6ce2db94224af320468052c028a0d052267e15e6dabf1ad0206b1af3c64736f6c63430008130033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8162:5",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:5",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "188:240:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "205:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "216:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "198:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "198:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "198:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "239:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "250:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "255:2:5",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "228:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "228:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "228:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "278:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "289:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "274:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "274:18:5"
                      },
                      {
                        "hexValue": "546865206665652073686f756c64206265206174206c6561737420657175616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "294:34:5",
                        "type": "",
                        "value": "The fee should be at least equal"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "267:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "267:62:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "267:62:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "349:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "360:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "345:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "345:18:5"
                      },
                      {
                        "hexValue": "20746f2074686520616e6e75616c20666565",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "365:20:5",
                        "type": "",
                        "value": " to the annual fee"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "338:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "338:48:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "338:48:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "395:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "407:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "418:3:5",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "403:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "403:19:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "395:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4a6141404791fabb15ebaa5876bb87a521d4d5e288e97aa43f5c978063fae66e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "165:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "179:4:5",
                "type": ""
              }
            ],
            "src": "14:414:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "607:174:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "624:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "635:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "617:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "617:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "617:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "658:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "669:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "654:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "654:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "674:2:5",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "647:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "647:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "647:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "697:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "708:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "693:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "693:18:5"
                      },
                      {
                        "hexValue": "4e6f206f746865722063616c6c7320737570706f72746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "713:26:5",
                        "type": "",
                        "value": "No other calls supported"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "686:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "686:54:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "686:54:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "749:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "761:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "772:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "757:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "757:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "749:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f34cad5094e5c2b73dd3ef7210fda01cdc4b9415a4abb84e67b74eb1a65a185d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "584:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "598:4:5",
                "type": ""
              }
            ],
            "src": "433:348:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "887:76:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "897:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "909:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "920:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "905:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "905:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "897:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "939:9:5"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "950:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "932:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "932:25:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "932:25:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "856:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "867:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "878:4:5",
                "type": ""
              }
            ],
            "src": "786:177:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1119:530:5",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1129:12:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1139:2:5",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1133:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1150:32:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1168:9:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1179:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1164:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1164:18:5"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "1154:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1198:9:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1209:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1191:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1191:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1191:21:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1221:17:5",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "1232:6:5"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "1225:3:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1247:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1267:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1261:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1261:13:5"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1251:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "1290:6:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1298:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1283:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1283:22:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1283:22:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1314:25:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1325:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1336:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1321:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1321:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1314:3:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1348:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1366:6:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1374:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1362:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1362:15:5"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "1352:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1386:10:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1395:1:5",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1390:1:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1454:169:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1475:3:5"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "1490:6:5"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "1484:5:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1484:13:5"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1499:42:5",
                                  "type": "",
                                  "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "1480:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1480:62:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1468:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1468:75:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1468:75:5"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1556:19:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1567:3:5"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1572:2:5"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1563:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1563:12:5"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1556:3:5"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1588:25:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "1602:6:5"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1610:2:5"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1598:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1598:15:5"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1588:6:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1416:1:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1419:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1413:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1413:13:5"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1427:18:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1429:14:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1438:1:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1441:1:5",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1434:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1434:9:5"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1429:1:5"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1409:3:5",
                    "statements": []
                  },
                  "src": "1405:218:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1632:11:5",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "1640:3:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1632:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1088:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1099:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1110:4:5",
                "type": ""
              }
            ],
            "src": "968:681:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1703:147:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1713:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1735:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1722:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1722:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1713:5:5"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1828:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1837:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1840:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1830:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1830:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1830:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1764:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1775:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1782:42:5",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1771:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1771:54:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1761:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1761:65:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1754:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1754:73:5"
                  },
                  "nodeType": "YulIf",
                  "src": "1751:93:5"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1682:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1693:5:5",
                "type": ""
              }
            ],
            "src": "1654:196:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1925:116:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1971:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1980:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1983:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1973:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1973:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1973:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1946:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1955:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1942:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1942:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1967:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1938:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1938:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "1935:52:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1996:39:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2025:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2006:18:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2006:29:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1996:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1891:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1902:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1914:6:5",
                "type": ""
              }
            ],
            "src": "1855:186:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2147:125:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2157:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2169:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2180:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2165:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2165:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2157:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2199:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2214:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2222:42:5",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2210:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2210:55:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2192:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2192:74:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2192:74:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2116:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2127:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2138:4:5",
                "type": ""
              }
            ],
            "src": "2046:226:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2347:110:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2393:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2402:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2405:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2395:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2395:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2395:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2368:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2377:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2364:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2364:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2389:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2360:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2360:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "2357:52:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2418:33:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2441:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2428:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2428:23:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2418:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2313:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2324:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2336:6:5",
                "type": ""
              }
            ],
            "src": "2277:180:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2549:167:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2595:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2604:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2607:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2597:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2597:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2597:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2570:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2579:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2566:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2566:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2591:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2562:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2562:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "2559:52:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2620:39:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2649:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2630:18:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2630:29:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2620:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2668:42:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2695:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2706:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2691:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2691:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2678:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2678:32:5"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2668:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2507:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2518:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2530:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2538:6:5",
                "type": ""
              }
            ],
            "src": "2462:254:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2840:146:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2850:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2862:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2873:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2858:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2858:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2850:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2892:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2917:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2910:6:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2910:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2903:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2903:22:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2885:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2885:41:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2885:41:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2946:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2957:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2942:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2942:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2966:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2974:4:5",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2962:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2962:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2935:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2935:45:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2935:45:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool_t_uint8__to_t_bool_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2801:9:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2812:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2820:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2831:4:5",
                "type": ""
              }
            ],
            "src": "2721:265:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3046:180:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3063:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3088:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3082:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3082:12:5"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3075:6:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3075:20:5"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3068:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3068:28:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3056:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3056:41:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3056:41:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3117:3:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3122:4:5",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3113:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3113:14:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3143:5:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3150:4:5",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3139:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3139:16:5"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "3133:5:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3133:23:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3158:4:5",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3129:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3129:34:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3106:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3106:58:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3106:58:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3184:3:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3189:4:5",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3180:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3180:14:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3206:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3213:4:5",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3202:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3202:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3196:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3196:23:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3173:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3173:47:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3173:47:5"
                }
              ]
            },
            "name": "abi_encode_struct_ApplyRights",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3030:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3037:3:5",
                "type": ""
              }
            ],
            "src": "2991:235:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3388:99:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3398:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3410:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3421:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3406:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3406:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3398:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3463:6:5"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3471:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_ApplyRights",
                      "nodeType": "YulIdentifier",
                      "src": "3433:29:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3433:48:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3433:48:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_ApplyRights_$655_memory_ptr__to_t_struct$_ApplyRights_$655_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3357:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3368:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3379:4:5",
                "type": ""
              }
            ],
            "src": "3231:256:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3587:92:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3597:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3609:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3620:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3605:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3605:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3597:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3639:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3664:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3657:6:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3657:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3650:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3650:22:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3632:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3632:41:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3632:41:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3556:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3567:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3578:4:5",
                "type": ""
              }
            ],
            "src": "3492:187:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3858:241:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3875:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3886:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3868:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3868:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3868:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3909:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3920:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3905:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3905:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3925:2:5",
                        "type": "",
                        "value": "51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3898:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3898:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3898:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3948:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3959:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3944:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3944:18:5"
                      },
                      {
                        "hexValue": "546865206665652073686f756c64206265206174206c6561737420657175616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3964:34:5",
                        "type": "",
                        "value": "The fee should be at least equal"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3937:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3937:62:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3937:62:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4019:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4030:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4015:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4015:18:5"
                      },
                      {
                        "hexValue": "20746f20746865206d6f6e74686c7920666565",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4035:21:5",
                        "type": "",
                        "value": " to the monthly fee"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4008:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4008:49:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4008:49:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4066:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4078:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4089:3:5",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4074:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4074:19:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4066:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_766ac243563fb571ecb13fa7cab6e795cd51532cc31b70c76841407e2e7e92ba__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3835:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3849:4:5",
                "type": ""
              }
            ],
            "src": "3684:415:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4278:174:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4295:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4306:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4288:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4288:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4288:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4329:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4340:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4325:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4325:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4345:2:5",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4318:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4318:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4318:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4368:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4379:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4364:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4364:18:5"
                      },
                      {
                        "hexValue": "4f6e6c7920726f6f742063616e2063616c6c20746869732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4384:26:5",
                        "type": "",
                        "value": "Only root can call this."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4357:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4357:54:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4357:54:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4420:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4432:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4443:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4428:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4428:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4420:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_32eef4ad43ae7c220d4fafb4e8c854a61e84d9b6aa750e364790cb14e83fa574__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4255:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4269:4:5",
                "type": ""
              }
            ],
            "src": "4104:348:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4489:152:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4506:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4509:77:5",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4499:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4499:88:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4499:88:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4603:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4606:4:5",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4596:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4596:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4596:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4627:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4630:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4620:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4620:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4620:15:5"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "4457:184:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4783:275:5",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4793:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4813:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4807:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4807:13:5"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4797:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4829:10:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4838:1:5",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "4833:1:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4900:77:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "4925:3:5"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "4930:1:5"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4921:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4921:11:5"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "4948:6:5"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "4956:1:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "4944:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4944:14:5"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4960:4:5",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4940:3:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4940:25:5"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "4934:5:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4934:32:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4914:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4914:53:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4914:53:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4859:1:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4862:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4856:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4856:13:5"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4870:21:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4872:17:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4881:1:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4884:4:5",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4877:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4877:12:5"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4872:1:5"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4852:3:5",
                    "statements": []
                  },
                  "src": "4848:129:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4986:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5000:3:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5005:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4996:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4996:16:5"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4990:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5028:2:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5032:1:5",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5021:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5021:13:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5021:13:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5043:9:5",
                  "value": {
                    "name": "_1",
                    "nodeType": "YulIdentifier",
                    "src": "5050:2:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5043:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4759:3:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4764:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4775:3:5",
                "type": ""
              }
            ],
            "src": "4646:412:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5237:169:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5254:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5265:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5247:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5247:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5247:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5288:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5299:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5284:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5284:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5304:2:5",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5277:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5277:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5277:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5327:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5338:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5323:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5323:18:5"
                      },
                      {
                        "hexValue": "4554485f5452414e534645525f4641494c4544",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5343:21:5",
                        "type": "",
                        "value": "ETH_TRANSFER_FAILED"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5316:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5316:49:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5316:49:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5374:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5386:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5397:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5382:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5382:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5374:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d383913ea1996930a2623a0d739b8fc033c734c1d71d4759d3ccba1d3a719c29__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5214:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5228:4:5",
                "type": ""
              }
            ],
            "src": "5063:343:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5585:179:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5602:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5613:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5595:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5595:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5595:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5636:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5647:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5632:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5632:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5652:2:5",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5625:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5625:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5625:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5675:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5686:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5671:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5671:18:5"
                      },
                      {
                        "hexValue": "416e6e75616c206665652063616e6e6f74206265206e65676174697665",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5691:31:5",
                        "type": "",
                        "value": "Annual fee cannot be negative"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5664:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5664:59:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5664:59:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5732:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5744:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5755:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5740:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5740:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5732:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bee9d69676824cd47594f29b816a34f80ebb3352835550f105e265355977e242__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5562:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5576:4:5",
                "type": ""
              }
            ],
            "src": "5411:353:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5943:254:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5960:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5971:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5953:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5953:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5953:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5994:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6005:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5990:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5990:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6010:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5983:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5983:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5983:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6033:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6044:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6029:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6029:18:5"
                      },
                      {
                        "hexValue": "41636365737320746f20626c696e6420626f786573206973206e6f7420616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6049:34:5",
                        "type": "",
                        "value": "Access to blind boxes is not all"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6022:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6022:62:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6022:62:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6104:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6115:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6100:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6100:18:5"
                      },
                      {
                        "hexValue": "6f77656420616e64206d7573742062652070616964206f722065787069726564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6120:34:5",
                        "type": "",
                        "value": "owed and must be paid or expired"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6093:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6093:62:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6093:62:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6164:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6176:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6187:3:5",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6172:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6172:19:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6164:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d85f97a0876d62269ac7009ae9894019ae1e1e6933e1240d96bea89a4f8deda4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5920:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5934:4:5",
                "type": ""
              }
            ],
            "src": "5769:428:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6331:198:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6341:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6353:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6364:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6349:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6349:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6341:4:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6376:52:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6386:42:5",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6380:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6444:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6459:6:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6467:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6455:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6455:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6437:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6437:34:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6437:34:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6491:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6502:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6487:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6487:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6511:6:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6519:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6507:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6507:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6480:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6480:43:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6480:43:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6292:9:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6303:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6311:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6322:4:5",
                "type": ""
              }
            ],
            "src": "6202:327:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6566:152:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6583:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6586:77:5",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6576:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6576:88:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6576:88:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6680:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6683:4:5",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6673:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6673:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6673:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6704:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6707:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6697:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6697:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6697:15:5"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "6534:184:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6755:152:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6772:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6775:77:5",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6765:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6765:88:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6765:88:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6869:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6872:4:5",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6862:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6862:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6862:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6893:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6896:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6886:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6886:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6886:15:5"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6723:184:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6959:88:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6990:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6992:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6992:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6992:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6975:5:5"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6986:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6982:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6982:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "6972:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6972:17:5"
                  },
                  "nodeType": "YulIf",
                  "src": "6969:43:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7021:20:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7032:5:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7039:1:5",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7028:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7028:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "7021:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6941:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "6951:3:5",
                "type": ""
              }
            ],
            "src": "6912:135:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7243:425:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7253:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7265:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7276:3:5",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7261:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7261:19:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7253:4:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7289:52:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7299:42:5",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7293:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7357:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "7378:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "7372:5:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7372:13:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7387:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7368:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7368:22:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7350:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7350:41:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7350:41:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7411:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7422:4:5",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7407:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7407:20:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7443:6:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7451:4:5",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7439:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7439:17:5"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "7433:5:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7433:24:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7459:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7429:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7429:33:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7400:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7400:63:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7400:63:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7483:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7494:4:5",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7479:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7479:20:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7515:6:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7523:4:5",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7511:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7511:17:5"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "7505:5:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7505:24:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7531:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7501:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7501:33:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7472:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7472:63:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7472:63:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7544:44:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7574:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7582:4:5",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7570:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7570:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7564:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7564:24:5"
                  },
                  "variables": [
                    {
                      "name": "memberValue0",
                      "nodeType": "YulTypedName",
                      "src": "7548:12:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memberValue0",
                        "nodeType": "YulIdentifier",
                        "src": "7627:12:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7645:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7656:4:5",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7641:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7641:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_ApplyRights",
                      "nodeType": "YulIdentifier",
                      "src": "7597:29:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7597:65:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7597:65:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_CreateOddsdexContractMessage_$648_memory_ptr__to_t_struct$_CreateOddsdexContractMessage_$648_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7212:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7223:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7234:4:5",
                "type": ""
              }
            ],
            "src": "7052:616:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7847:180:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7864:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7875:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7857:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7857:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7857:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7898:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7909:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7894:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7894:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7914:2:5",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7887:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7887:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7887:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7937:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7948:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7933:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7933:18:5"
                      },
                      {
                        "hexValue": "4d6f6e74686c79206665652063616e6e6f74206265206e65676174697665",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7953:32:5",
                        "type": "",
                        "value": "Monthly fee cannot be negative"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7926:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7926:60:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7926:60:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7995:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8007:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8018:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8003:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8003:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7995:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9ac1d00b7fe603401716618a57df1a36661330b53c4069cba0ac68126d3f79ea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7824:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7838:4:5",
                "type": ""
              }
            ],
            "src": "7673:354:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8081:79:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8091:17:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8103:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8106:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "8099:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8099:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "8091:4:5"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8132:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8134:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8134:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8134:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "8123:4:5"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8129:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8120:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8120:11:5"
                  },
                  "nodeType": "YulIf",
                  "src": "8117:37:5"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8063:1:5",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8066:1:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "8072:4:5",
                "type": ""
              }
            ],
            "src": "8032:128:5"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_4a6141404791fabb15ebaa5876bb87a521d4d5e288e97aa43f5c978063fae66e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"The fee should be at least equal\")\n        mstore(add(headStart, 96), \" to the annual fee\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f34cad5094e5c2b73dd3ef7210fda01cdc4b9415a4abb84e67b74eb1a65a185d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"No other calls supported\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool_t_uint8__to_t_bool_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), and(value1, 0xff))\n    }\n    function abi_encode_struct_ApplyRights(value, pos)\n    {\n        mstore(pos, iszero(iszero(mload(value))))\n        mstore(add(pos, 0x20), and(mload(add(value, 0x20)), 0xff))\n        mstore(add(pos, 0x40), mload(add(value, 0x40)))\n    }\n    function abi_encode_tuple_t_struct$_ApplyRights_$655_memory_ptr__to_t_struct$_ApplyRights_$655_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        abi_encode_struct_ApplyRights(value0, headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_766ac243563fb571ecb13fa7cab6e795cd51532cc31b70c76841407e2e7e92ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"The fee should be at least equal\")\n        mstore(add(headStart, 96), \" to the monthly fee\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_32eef4ad43ae7c220d4fafb4e8c854a61e84d9b6aa750e364790cb14e83fa574__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Only root can call this.\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_d383913ea1996930a2623a0d739b8fc033c734c1d71d4759d3ccba1d3a719c29__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"ETH_TRANSFER_FAILED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bee9d69676824cd47594f29b816a34f80ebb3352835550f105e265355977e242__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Annual fee cannot be negative\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d85f97a0876d62269ac7009ae9894019ae1e1e6933e1240d96bea89a4f8deda4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), \"Access to blind boxes is not all\")\n        mstore(add(headStart, 96), \"owed and must be paid or expired\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_struct$_CreateOddsdexContractMessage_$648_memory_ptr__to_t_struct$_CreateOddsdexContractMessage_$648_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(mload(value0), _1))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), _1))\n        mstore(add(headStart, 0x40), and(mload(add(value0, 0x40)), _1))\n        let memberValue0 := mload(add(value0, 0x60))\n        abi_encode_struct_ApplyRights(memberValue0, add(headStart, 0x60))\n    }\n    function abi_encode_tuple_t_stringliteral_9ac1d00b7fe603401716618a57df1a36661330b53c4069cba0ac68126d3f79ea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Monthly fee cannot be negative\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n}",
      "id": 5,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "165:5070:0:-:0;;;486:19;458:47;;552:18;523:47;;589:48;;;;;;;;;-1:-1:-1;613:4:0;:17;;-1:-1:-1;;;;;;613:17:0;620:10;613:17;;;165:5070;;;;;;",
  "deployedSourceMap": "165:5070:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4320:9;;4307;:22;;4286:119;;;;-1:-1:-1;;;;;4286:119:0;;216:2:5;4286:119:0;;;198:21:5;255:2;235:18;;;228:30;294:34;274:18;;;267:62;365:20;345:18;;;338:48;403:19;;4286:119:0;;;;;;;;;4436:37;;;;;;;;4448:4;4436:37;;;;;;;;;;4457:15;4436:37;;;;;;4422:10;-1:-1:-1;4415:18:0;;;:6;:18;;;;;;;:58;;;;;;-1:-1:-1;;4415:58:0;;;;;;-1:-1:-1;;4415:58:0;;;4436:37;4415:58;;;;;;;;;;;;;;;;;;;4436:37;165:5070;4117:42;;-1:-1:-1;;;;;4117:42:0;;635:2:5;4117:42:0;;;617:21:5;674:2;654:18;;;647:30;713:26;693:18;;;686:54;757:18;;4117:42:0;433:348:5;4117:42:0;165:5070;4857:106;;;;;;;;;;-1:-1:-1;4940:9:0;:16;4857:106;;;932:25:5;;;920:2;905:18;4857:106:0;;;;;;;;4969:101;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1970:106::-;;;;;;;;;;-1:-1:-1;2056:4:0;2048:21;1970:106;;5076:157;;;;;;;;;;-1:-1:-1;5076:157:0;;;;;:::i;:::-;;:::i;4486:256::-;;;:::i;2082:98::-;;;;;;;;;;-1:-1:-1;2168:4:0;2082:98;;;-1:-1:-1;;;;;2210:55:5;;;2192:74;;2180:2;2165:18;2082:98:0;2046:226:5;3851:222:0;;;:::i;284:26::-;;;;;;;;;;-1:-1:-1;284:26:0;;;;;:::i;:::-;;:::i;2288:98::-;;;;;;;;;;-1:-1:-1;2369:10:0;;2288:98;;316:54;;;;;;;;;;-1:-1:-1;316:54:0;;;;;:::i;:::-;;:::i;4748:103::-;;;;;;;;;;-1:-1:-1;4830:7:0;:14;4748:103;;2392:172;;;;;;;;;;-1:-1:-1;2392:172:0;;;;;:::i;:::-;;:::i;2754:1091::-;;;;;;;;;;-1:-1:-1;2754:1091:0;;;;;:::i;:::-;;:::i;2570:178::-;;;;;;;;;;-1:-1:-1;2570:178:0;;;;;:::i;:::-;;:::i;1429:535::-;;;;;;;;;;-1:-1:-1;1429:535:0;;;;;:::i;:::-;;:::i;:::-;;;;2910:14:5;;2903:22;2885:41;;2974:4;2962:17;;;2957:2;2942:18;;2935:45;2858:18;1429:535:0;2721:265:5;752:142:0;;;;;;;;;;-1:-1:-1;752:142:0;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;873:14:0;;;;;;:6;:14;;;;;;866:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;752:142;;;;;;;;:::i;1086:337::-;;;;;;;;;;-1:-1:-1;1086:337:0;;;;;:::i;:::-;;:::i;:::-;;;3657:14:5;;3650:22;3632:41;;3620:2;3605:18;1086:337:0;3492:187:5;2186:96:0;;;;;;;;;;-1:-1:-1;2266:9:0;;2186:96;;376:24;;;;;;;;;;-1:-1:-1;376:24:0;;;;;:::i;:::-;;:::i;900:180::-;;;;;;;;;;-1:-1:-1;900:180:0;;;;;:::i;:::-;-1:-1:-1;;;;;1027:14:0;984:4;1027:14;;;:6;:14;;;;;;;;;1000:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1058:15;;;900:180;259:19;;;;;;;;;;-1:-1:-1;259:19:0;;;;-1:-1:-1;;;;;259:19:0;;;4969:101;5021:16;5056:7;5049:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5049:14:0;;;;;;;;;;;;;;;;;;;;;;;4969:101;:::o;5076:157::-;-1:-1:-1;;;;;5201:25:0;;;;;;:17;:25;;;;;;;;;5194:32;;;;;;;;;;;;;;;;;5166:16;;5194:32;;;5201:25;5194:32;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5194:32:0;;;;;;;;;;;;;;;;;;;;;;;5076:157;;;:::o;4486:256::-;4580:10;;4567:9;:23;;4546:121;;;;-1:-1:-1;;;;;4546:121:0;;3886:2:5;4546:121:0;;;3868:21:5;3925:2;3905:18;;;3898:30;3964:34;3944:18;;;3937:62;4035:21;4015:18;;;4008:49;4074:19;;4546:121:0;3684:415:5;4546:121:0;4698:37;;;;;;;;4710:4;4698:37;;;4716:1;4698:37;;;;;;;4719:15;4698:37;;;;;;4684:10;-1:-1:-1;4677:18:0;;;:6;:18;;;;;;:58;;;;;;-1:-1:-1;;4677:58:0;;;;;;-1:-1:-1;;4677:58:0;;;4698:37;4677:58;;;;;;;;;;;;;;;4486:256::o;3851:222::-;681:4;;-1:-1:-1;;;;;681:4:0;689:10;681:18;673:55;;;;-1:-1:-1;;;;;673:55:0;;;;;;;:::i;:::-;3915:12:::1;3941:4:::0;;3995:12:::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;3941:4:0;;::::1;::::0;3967::::1;3959:21;::::0;3933:84:::1;::::0;3995:12;3933:84:::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3914:103;;;4035:7;4027:39;;;::::0;-1:-1:-1;;;;;4027:39:0;;5265:2:5;4027:39:0::1;::::0;::::1;5247:21:5::0;5304:2;5284:18;;;5277:30;5343:21;5323:18;;;5316:49;5382:18;;4027:39:0::1;5063:343:5::0;4027:39:0::1;3904:169;3851:222::o:0;284:26::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;284:26:0;;-1:-1:-1;284:26:0;:::o;316:54::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;316:54:0;;-1:-1:-1;316:54:0;;-1:-1:-1;316:54:0:o;2392:172::-;681:4;;-1:-1:-1;;;;;681:4:0;689:10;681:18;673:55;;;;-1:-1:-1;;;;;673:55:0;;;;;;;:::i;:::-;2490:1:::1;2477:10;:14;2469:56;;;::::0;-1:-1:-1;;;;;2469:56:0;;5613:2:5;2469:56:0::1;::::0;::::1;5595:21:5::0;5652:2;5632:18;;;5625:30;5691:31;5671:18;;;5664:59;5740:18;;2469:56:0::1;5411:353:5::0;2469:56:0::1;2535:9;:22:::0;2392:172::o;2754:1091::-;2850:7;681:4;;-1:-1:-1;;;;;681:4:0;689:10;681:18;673:55;;;;-1:-1:-1;;;;;673:55:0;;;;;;;:::i;:::-;2890:22:::1;2904:7;2890:13;:22::i;:::-;2869:133;;;::::0;;-1:-1:-1;;;;;2869:133:0;;5971:2:5;2869:133:0::1;::::0;::::1;5953:21:5::0;5990:18;;;5983:30;;;;6049:34;6029:18;;;6022:62;6120:34;6100:18;;;6093:62;6172:19;;2869:133:0::1;5769:428:5::0;2869:133:0::1;3013:24;3060:4:::0;;3040:34:::1;::::0;-1:-1:-1;;;;;3060:4:0;;::::1;::::0;3066:7;;3040:34:::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;6455:15:5;;;6437:34;;6507:15;;6502:2;6487:18;;6480:43;6364:2;6349:18;3040:34:0::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;3137:9:0::1;:31:::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;3137:31:0;;::::1;-1:-1:-1::0;;3137:31:0;;::::1;::::0;::::1;::::0;;;3217:26;::::1;3084:23;3217:26:::0;;;:17:::1;3137:31;3217:26:::0;;;;;;3253:40;;;;::::1;::::0;;;;;;;;;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;3013:61;;-1:-1:-1;3013:61:0;;3084:23;3334:164:::1;3355:7;:14:::0;3351:18;::::1;3334:164;;;3408:7;-1:-1:-1::0;;;;;3394:21:0::1;:7;3402:1;3394:10;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;3394:10:0::1;:21:::0;3390:98:::1;;3446:4;3435:15;;3468:5;;3390:98;3371:3:::0;::::1;::::0;::::1;:::i;:::-;;;;3334:164;;;;3512:8;3507:61;;3536:7;:21:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;3536:21:0;;;;;::::1;::::0;;-1:-1:-1;;3536:21:0::1;-1:-1:-1::0;;;;;3536:21:0;::::1;;::::0;;3507:61:::1;3620:141;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;3620:141:0;;::::1;::::0;;3691:10:::1;3620:141;::::0;;::::1;::::0;;;;;;::::1;::::0;;;;;;3577:40:::1;3736:15:::0;;;:6:::1;:15:::0;;;;;3620:141;;;;;::::1;::::0;;;;::::1;::::0;;::::1;;;::::0;;::::1;::::0;;::::1;;::::0;;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;3777:29;;::::1;::::0;::::1;::::0;3620:141;;3777:29:::1;:::i;:::-;;;;;;;;-1:-1:-1::0;3823:15:0;;-1:-1:-1;;;;738:1:0::1;2754:1091:::0;;;:::o;2570:178::-;681:4;;-1:-1:-1;;;;;681:4:0;689:10;681:18;673:55;;;;-1:-1:-1;;;;;673:55:0;;;;;;;:::i;:::-;2671:1:::1;2657:11;:15;2649:58;;;::::0;-1:-1:-1;;;;;2649:58:0;;7875:2:5;2649:58:0::1;::::0;::::1;7857:21:5::0;7914:2;7894:18;;;7887:30;7953:32;7933:18;;;7926:60;8003:18;;2649:58:0::1;7673:354:5::0;2649:58:0::1;2717:10;:24:::0;2570:178::o;1429:535::-;-1:-1:-1;;;;;1558:14:0;;1508:4;1558:14;;;:6;:14;;;;;;;;1531:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1508:4;;1531:41;;1508:4;;1531:41;1649:15;;1645:68;;1688:4;;1694:7;;-1:-1:-1;1429:535:0;-1:-1:-1;;;;1429:535:0:o;1645:68::-;1726:7;:12;;1737:1;1726:12;1722:96;;1798:8;1784:5;:10;;;1766:15;:28;;;;:::i;:::-;:40;;1754:53;;1722:96;1831:7;:12;;1842:1;1831:12;1827:95;;1903:7;1889:5;:10;;;1871:15;:28;;;;:::i;:::-;:39;;1859:52;;1827:95;1939:8;;1949:7;;-1:-1:-1;1429:535:0;-1:-1:-1;;;1429:535:0:o;1086:337::-;-1:-1:-1;;;;;1198:14:0;;1155:4;1198:14;;;:6;:14;;;;;;;;1171:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1222:57;;-1:-1:-1;1263:5:0;;1086:337;-1:-1:-1;;1086:337:0:o;1222:57::-;1292:5;:10;;;1306:1;1292:15;1288:58;;-1:-1:-1;1330:5:0;;1086:337;-1:-1:-1;;1086:337:0:o;1288:58::-;1356:12;1374:17;1384:6;1374:9;:17::i;:::-;-1:-1:-1;1408:8:0;;1086:337;-1:-1:-1;;;;1086:337:0:o;376:24::-;;;;;;;;;;;;-1:-1:-1;;;;;;;;:::o;968:681:5:-;1139:2;1191:21;;;1261:13;;1164:18;;;1283:22;;;1110:4;;1139:2;1362:15;;;;1336:2;1321:18;;;1110:4;1405:218;1419:6;1416:1;1413:13;1405:218;;;1484:13;;-1:-1:-1;;;;;1480:62:5;1468:75;;1598:15;;;;1563:12;;;;1441:1;1434:9;1405:218;;;-1:-1:-1;1640:3:5;;968:681;-1:-1:-1;;;;;;968:681:5:o;1654:196::-;1722:20;;-1:-1:-1;;;;;1771:54:5;;1761:65;;1751:93;;1840:1;1837;1830:12;1855:186;1914:6;1967:2;1955:9;1946:7;1942:23;1938:32;1935:52;;;1983:1;1980;1973:12;1935:52;2006:29;2025:9;2006:29;:::i;:::-;1996:39;1855:186;-1:-1:-1;;;1855:186:5:o;2277:180::-;2336:6;2389:2;2377:9;2368:7;2364:23;2360:32;2357:52;;;2405:1;2402;2395:12;2357:52;-1:-1:-1;2428:23:5;;2277:180;-1:-1:-1;2277:180:5:o;2462:254::-;2530:6;2538;2591:2;2579:9;2570:7;2566:23;2562:32;2559:52;;;2607:1;2604;2597:12;2559:52;2630:29;2649:9;2630:29;:::i;:::-;2620:39;2706:2;2691:18;;;;2678:32;;-1:-1:-1;;;2462:254:5:o;3231:256::-;3082:12;;3075:20;3068:28;3056:41;;3150:4;3139:16;;;3133:23;3158:4;3129:34;3113:14;;;3106:58;3213:4;3202:16;;;3196:23;3180:14;;;3173:47;3421:2;3406:18;;3433:48;3231:256;;;;:::o;4104:348::-;4306:2;4288:21;;;4345:2;4325:18;;;4318:30;4384:26;4379:2;4364:18;;4357:54;4443:2;4428:18;;4104:348::o;4646:412::-;4775:3;4813:6;4807:13;4838:1;4848:129;4862:6;4859:1;4856:13;4848:129;;;4960:4;4944:14;;;4940:25;;4934:32;4921:11;;;4914:53;4877:12;4848:129;;;-1:-1:-1;5032:1:5;4996:16;;5021:13;;;-1:-1:-1;4996:16:5;4646:412;-1:-1:-1;4646:412:5:o;6534:184::-;6586:77;6583:1;6576:88;6683:4;6680:1;6673:15;6707:4;6704:1;6697:15;6723:184;6775:77;6772:1;6765:88;6872:4;6869:1;6862:15;6896:4;6893:1;6886:15;6912:135;6951:3;6972:17;;;6969:43;;6992:18;;:::i;:::-;-1:-1:-1;7039:1:5;7028:13;;6912:135::o;7052:616::-;7234:4;7276:3;7265:9;7261:19;7253:27;;-1:-1:-1;;;;;7387:2:5;7378:6;7372:13;7368:22;7357:9;7350:41;7459:2;7451:4;7443:6;7439:17;7433:24;7429:33;7422:4;7411:9;7407:20;7400:63;7531:2;7523:4;7515:6;7511:17;7505:24;7501:33;7494:4;7483:9;7479:20;7472:63;;7582:4;7574:6;7570:17;7564:24;7597:65;7656:4;7645:9;7641:20;7627:12;3082;;3075:20;3068:28;3056:41;;3150:4;3139:16;;;3133:23;3158:4;3129:34;3113:14;;;3106:58;3213:4;3202:16;;;3196:23;3180:14;;3173:47;2991:235;7597:65;;7052:616;;;;:::o;8032:128::-;8099:9;;;8120:11;;;8117:37;;;8134:18;;:::i",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.8.20;\nimport \"./IGamblingContractFactory.sol\";\nimport \"./OddsdexContract.sol\";\nimport \"./SafeMath.sol\";\n\ncontract GamblingContractFactory is IGamblingContractFactory {\n    using SafeMath for *;\n\n    address public root;\n    address[] public contracts;\n    mapping(address => address[]) public contractsOfBroker;\n    address[] public brokers;\n    mapping(address => ApplyRights) private rights;\n    uint256 private annualFee = 4200000000000000000; //4.2 ether\n    uint256 private monthlyFee = 400000000000000000; //0.4 ether\n\n    constructor() {\n        root = msg.sender;\n    }\n\n    modifier onlyRoot() {\n        require(root == msg.sender, \"Only root can call this.\");\n        _;\n    }\n\n    function getApplyRights(\n        address broker\n    ) public view override returns (ApplyRights memory) {\n        return rights[broker];\n    }\n\n    function isPaidOfBroker(\n        address broker\n    ) public view override returns (bool) {\n        ApplyRights memory right = rights[broker];\n        return right.time != 0;\n    }\n\n    function isValidBroker(address broker) public view override returns (bool) {\n        ApplyRights memory right = rights[broker];\n        if (!right.isAllow) {\n            return false;\n        }\n        if (right.time == 0) {\n            return false;\n        }\n        (bool expired, ) = isExpired(broker);\n        return !expired;\n    }\n\n    function isExpired(\n        address broker\n    ) public view override returns (bool, uint8) {\n        ApplyRights memory right = rights[broker];\n\n        bool _expired;\n        uint8 payMode = right.payMode;\n        if (right.time == 0) {\n            return (true, payMode);\n        }\n        if (payMode == 1) {\n            _expired = (block.timestamp - right.time >= 31536000);\n        }\n        if (payMode == 2) {\n            _expired = (block.timestamp - right.time >= 2678400);\n        }\n        return (_expired, payMode);\n    }\n\n    function getBalance() public view override returns (uint256) {\n        return address(this).balance;\n    }\n\n    function getAddress() public view override returns (address) {\n        return address(this);\n    }\n\n    function getAnnualFee() public view override returns (uint256) {\n        return annualFee;\n    }\n\n    function getMonthlyFee() public view override returns (uint256) {\n        return monthlyFee;\n    }\n\n    function setAnnualFee(uint256 _annualFee) public override onlyRoot {\n        require(_annualFee > 0, \"Annual fee cannot be negative\");\n        annualFee = _annualFee;\n    }\n\n    function setMonthlyFee(uint256 _monthlyFee) public override onlyRoot {\n        require(_monthlyFee > 0, \"Monthly fee cannot be negative\");\n        monthlyFee = _monthlyFee;\n    }\n\n    function createOddsdexContract(\n        address _broker\n    ) public override onlyRoot returns (address) {\n        require(\n            isValidBroker(_broker),\n            \"Access to blind boxes is not allowed and must be paid or expired\"\n        );\n\n        OddsdexContract blindBox = new OddsdexContract(root, _broker);\n        address blindBoxAddress = address(blindBox);\n        contracts.push(blindBoxAddress);\n        address[] storage contractAddressArr = contractsOfBroker[_broker];\n        contractAddressArr.push(blindBoxAddress);\n        bool foundKey = false;\n        for (uint i = 0; i < brokers.length; i++) {\n            if (brokers[i] == _broker) {\n                foundKey = true;\n                break;\n            }\n        }\n        if (!foundKey) {\n            brokers.push(_broker);\n        }\n        CreateOddsdexContractMessage memory cgcm = CreateOddsdexContractMessage(\n            blindBoxAddress,\n            msg.sender,\n            _broker,\n            rights[_broker]\n        );\n\n        emit OnCreateOddsdexContract(cgcm);\n        return blindBoxAddress;\n    }\n\n    function withdraw() public payable override onlyRoot {\n        (bool success, ) = payable(root).call{value: address(this).balance}(\n            new bytes(0)\n        );\n        require(success, \"ETH_TRANSFER_FAILED\");\n    }\n\n    fallback() external payable {\n        require(false, \"No other calls supported\");\n    }\n\n    ///@dev The default payment method is only used for charging annual fees\n    receive() external payable {\n        require(\n            msg.value >= annualFee,\n            \"The fee should be at least equal to the annual fee\"\n        );\n        rights[msg.sender] = ApplyRights(true, 1, block.timestamp);\n    }\n\n    function recMothlyFee() external payable override {\n        require(\n            msg.value >= monthlyFee,\n            \"The fee should be at least equal to the monthly fee\"\n        );\n        rights[msg.sender] = ApplyRights(true, 2, block.timestamp);\n    }\n\n    function getBrokerCount() public view override returns (uint256) {\n        return brokers.length;\n    }\n\n    function getOddsdexCount() public view override returns (uint256) {\n        return contracts.length;\n    }\n\n    function enumBroker() public view override returns (address[] memory) {\n        return brokers;\n    }\n\n    function listContractOfBroker(\n        address broker\n    ) public view override returns (address[] memory) {\n        return contractsOfBroker[broker];\n    }\n}\n",
  "sourcePath": "/Users/cj/games/game-oddsdex/contracts/GamblingContractFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/GamblingContractFactory.sol",
    "exportedSymbols": {
      "ApplyRights": [
        655
      ],
      "BulletinBoard": [
        811
      ],
      "CoinDirection": [
        796
      ],
      "CreateOddsdexContractMessage": [
        648
      ],
      "GamblingContractFactory": [
        532
      ],
      "IGamblingContractFactory": [
        638
      ],
      "IOddsdexContract": [
        792
      ],
      "LuckyNumber": [
        828
      ],
      "MatchmakingBill": [
        880
      ],
      "OddsdexContract": [
        3143
      ],
      "RefundBill": [
        891
      ],
      "SafeMath": [
        3339
      ],
      "SplitBill": [
        916
      ],
      "StakeBill": [
        848
      ]
    },
    "id": 533,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:33:0"
      },
      {
        "absolutePath": "project:/contracts/IGamblingContractFactory.sol",
        "file": "./IGamblingContractFactory.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 533,
        "sourceUnit": 656,
        "src": "66:40:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/OddsdexContract.sol",
        "file": "./OddsdexContract.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 533,
        "sourceUnit": 3144,
        "src": "107:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 533,
        "sourceUnit": 3340,
        "src": "139:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "IGamblingContractFactory",
              "nameLocations": [
                "201:24:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 638,
              "src": "201:24:0"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "201:24:0"
          }
        ],
        "canonicalName": "GamblingContractFactory",
        "contractDependencies": [
          3143
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 532,
        "linearizedBaseContracts": [
          532,
          638
        ],
        "name": "GamblingContractFactory",
        "nameLocation": "174:23:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 8,
            "libraryName": {
              "id": 7,
              "name": "SafeMath",
              "nameLocations": [
                "238:8:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3339,
              "src": "238:8:0"
            },
            "nodeType": "UsingForDirective",
            "src": "232:21:0"
          },
          {
            "constant": false,
            "functionSelector": "ebf0c717",
            "id": 10,
            "mutability": "mutable",
            "name": "root",
            "nameLocation": "274:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 532,
            "src": "259:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "259:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "474da79a",
            "id": 13,
            "mutability": "mutable",
            "name": "contracts",
            "nameLocation": "301:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 532,
            "src": "284:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 11,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "284:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 12,
              "nodeType": "ArrayTypeName",
              "src": "284:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "633131b8",
            "id": 18,
            "mutability": "mutable",
            "name": "contractsOfBroker",
            "nameLocation": "353:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 532,
            "src": "316:54:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 17,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 14,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "324:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "316:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 15,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "335:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 16,
                "nodeType": "ArrayTypeName",
                "src": "335:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d5221cc1",
            "id": 21,
            "mutability": "mutable",
            "name": "brokers",
            "nameLocation": "393:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 532,
            "src": "376:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 19,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "376:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 20,
              "nodeType": "ArrayTypeName",
              "src": "376:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 26,
            "mutability": "mutable",
            "name": "rights",
            "nameLocation": "446:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 532,
            "src": "406:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ApplyRights_$655_storage_$",
              "typeString": "mapping(address => struct ApplyRights)"
            },
            "typeName": {
              "id": 25,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 22,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "414:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "406:31:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ApplyRights_$655_storage_$",
                "typeString": "mapping(address => struct ApplyRights)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 24,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 23,
                  "name": "ApplyRights",
                  "nameLocations": [
                    "425:11:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 655,
                  "src": "425:11:0"
                },
                "referencedDeclaration": 655,
                "src": "425:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ApplyRights_$655_storage_ptr",
                  "typeString": "struct ApplyRights"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 29,
            "mutability": "mutable",
            "name": "annualFee",
            "nameLocation": "474:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 532,
            "src": "458:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 27,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "458:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "34323030303030303030303030303030303030",
              "id": 28,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "486:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_4200000000000000000_by_1",
                "typeString": "int_const 4200000000000000000"
              },
              "value": "4200000000000000000"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 32,
            "mutability": "mutable",
            "name": "monthlyFee",
            "nameLocation": "539:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 532,
            "src": "523:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 30,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "523:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "343030303030303030303030303030303030",
              "id": 31,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "552:18:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_400000000000000000_by_1",
                "typeString": "int_const 400000000000000000"
              },
              "value": "400000000000000000"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "603:34:0",
              "statements": [
                {
                  "expression": {
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35,
                      "name": "root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "613:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 36,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "620:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "624:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "620:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "613:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "613:17:0"
                }
              ]
            },
            "id": 41,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "600:2:0"
            },
            "returnParameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "603:0:0"
            },
            "scope": 532,
            "src": "589:48:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "663:83:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 44,
                          "name": "root",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "681:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 45,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "689:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "693:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "689:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "681:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920726f6f742063616e2063616c6c20746869732e",
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "701:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_32eef4ad43ae7c220d4fafb4e8c854a61e84d9b6aa750e364790cb14e83fa574",
                          "typeString": "literal_string \"Only root can call this.\""
                        },
                        "value": "Only root can call this."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_32eef4ad43ae7c220d4fafb4e8c854a61e84d9b6aa750e364790cb14e83fa574",
                          "typeString": "literal_string \"Only root can call this.\""
                        }
                      ],
                      "id": 43,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "673:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "673:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "673:55:0"
                },
                {
                  "id": 51,
                  "nodeType": "PlaceholderStatement",
                  "src": "738:1:0"
                }
              ]
            },
            "id": 53,
            "name": "onlyRoot",
            "nameLocation": "652:8:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "660:2:0"
            },
            "src": "643:103:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              575
            ],
            "body": {
              "id": 66,
              "nodeType": "Block",
              "src": "856:38:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 62,
                      "name": "rights",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "873:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ApplyRights_$655_storage_$",
                        "typeString": "mapping(address => struct ApplyRights storage ref)"
                      }
                    },
                    "id": 64,
                    "indexExpression": {
                      "id": 63,
                      "name": "broker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "880:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "873:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ApplyRights_$655_storage",
                      "typeString": "struct ApplyRights storage ref"
                    }
                  },
                  "functionReturnParameters": 61,
                  "id": 65,
                  "nodeType": "Return",
                  "src": "866:21:0"
                }
              ]
            },
            "functionSelector": "be8fabd3",
            "id": 67,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApplyRights",
            "nameLocation": "761:14:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 57,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "818:8:0"
            },
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "broker",
                  "nameLocation": "793:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "785:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "785:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "775:30:0"
            },
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "836:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ApplyRights_$655_memory_ptr",
                    "typeString": "struct ApplyRights"
                  },
                  "typeName": {
                    "id": 59,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 58,
                      "name": "ApplyRights",
                      "nameLocations": [
                        "836:11:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 655,
                      "src": "836:11:0"
                    },
                    "referencedDeclaration": 655,
                    "src": "836:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ApplyRights_$655_storage_ptr",
                      "typeString": "struct ApplyRights"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "835:20:0"
            },
            "scope": 532,
            "src": "752:142:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              582
            ],
            "body": {
              "id": 87,
              "nodeType": "Block",
              "src": "990:90:0",
              "statements": [
                {
                  "assignments": [
                    77
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77,
                      "mutability": "mutable",
                      "name": "right",
                      "nameLocation": "1019:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 87,
                      "src": "1000:24:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ApplyRights_$655_memory_ptr",
                        "typeString": "struct ApplyRights"
                      },
                      "typeName": {
                        "id": 76,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 75,
                          "name": "ApplyRights",
                          "nameLocations": [
                            "1000:11:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 655,
                          "src": "1000:11:0"
                        },
                        "referencedDeclaration": 655,
                        "src": "1000:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ApplyRights_$655_storage_ptr",
                          "typeString": "struct ApplyRights"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81,
                  "initialValue": {
                    "baseExpression": {
                      "id": 78,
                      "name": "rights",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "1027:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ApplyRights_$655_storage_$",
                        "typeString": "mapping(address => struct ApplyRights storage ref)"
                      }
                    },
                    "id": 80,
                    "indexExpression": {
                      "id": 79,
                      "name": "broker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "1034:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1027:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ApplyRights_$655_storage",
                      "typeString": "struct ApplyRights storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1000:41:0"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 82,
                        "name": "right",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1058:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ApplyRights_$655_memory_ptr",
                          "typeString": "struct ApplyRights memory"
                        }
                      },
                      "id": 83,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1064:4:0",
                      "memberName": "time",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 654,
                      "src": "1058:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1072:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1058:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 74,
                  "id": 86,
                  "nodeType": "Return",
                  "src": "1051:22:0"
                }
              ]
            },
            "functionSelector": "e9a3e169",
            "id": 88,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPaidOfBroker",
            "nameLocation": "909:14:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 71,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "966:8:0"
            },
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "broker",
                  "nameLocation": "941:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "933:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "933:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "923:30:0"
            },
            "returnParameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "984:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "984:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "983:6:0"
            },
            "scope": 532,
            "src": "900:180:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              589
            ],
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "1161:262:0",
              "statements": [
                {
                  "assignments": [
                    98
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98,
                      "mutability": "mutable",
                      "name": "right",
                      "nameLocation": "1190:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 127,
                      "src": "1171:24:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ApplyRights_$655_memory_ptr",
                        "typeString": "struct ApplyRights"
                      },
                      "typeName": {
                        "id": 97,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 96,
                          "name": "ApplyRights",
                          "nameLocations": [
                            "1171:11:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 655,
                          "src": "1171:11:0"
                        },
                        "referencedDeclaration": 655,
                        "src": "1171:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ApplyRights_$655_storage_ptr",
                          "typeString": "struct ApplyRights"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102,
                  "initialValue": {
                    "baseExpression": {
                      "id": 99,
                      "name": "rights",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "1198:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ApplyRights_$655_storage_$",
                        "typeString": "mapping(address => struct ApplyRights storage ref)"
                      }
                    },
                    "id": 101,
                    "indexExpression": {
                      "id": 100,
                      "name": "broker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "1205:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1198:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ApplyRights_$655_storage",
                      "typeString": "struct ApplyRights storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1171:41:0"
                },
                {
                  "condition": {
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1226:14:0",
                    "subExpression": {
                      "expression": {
                        "id": 103,
                        "name": "right",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "1227:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ApplyRights_$655_memory_ptr",
                          "typeString": "struct ApplyRights memory"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1233:7:0",
                      "memberName": "isAllow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 650,
                      "src": "1227:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 109,
                  "nodeType": "IfStatement",
                  "src": "1222:57:0",
                  "trueBody": {
                    "id": 108,
                    "nodeType": "Block",
                    "src": "1242:37:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1263:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 95,
                        "id": 107,
                        "nodeType": "Return",
                        "src": "1256:12:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 110,
                        "name": "right",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "1292:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ApplyRights_$655_memory_ptr",
                          "typeString": "struct ApplyRights memory"
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1298:4:0",
                      "memberName": "time",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 654,
                      "src": "1292:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1306:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1292:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 117,
                  "nodeType": "IfStatement",
                  "src": "1288:58:0",
                  "trueBody": {
                    "id": 116,
                    "nodeType": "Block",
                    "src": "1309:37:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1330:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 95,
                        "id": 115,
                        "nodeType": "Return",
                        "src": "1323:12:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    119,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 119,
                      "mutability": "mutable",
                      "name": "expired",
                      "nameLocation": "1361:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 127,
                      "src": "1356:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 118,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1356:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 123,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 121,
                        "name": "broker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "1384:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 120,
                      "name": "isExpired",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 200,
                      "src": "1374:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$_t_uint8_$",
                        "typeString": "function (address) view returns (bool,uint8)"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1374:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint8_$",
                      "typeString": "tuple(bool,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1355:36:0"
                },
                {
                  "expression": {
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1408:8:0",
                    "subExpression": {
                      "id": 124,
                      "name": "expired",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "1409:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 95,
                  "id": 126,
                  "nodeType": "Return",
                  "src": "1401:15:0"
                }
              ]
            },
            "functionSelector": "c737edec",
            "id": 128,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidBroker",
            "nameLocation": "1095:13:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 92,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1137:8:0"
            },
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "broker",
                  "nameLocation": "1117:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "1109:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1109:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1108:16:0"
            },
            "returnParameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "1155:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1154:6:0"
            },
            "scope": 532,
            "src": "1086:337:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              598
            ],
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "1521:443:0",
              "statements": [
                {
                  "assignments": [
                    140
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 140,
                      "mutability": "mutable",
                      "name": "right",
                      "nameLocation": "1550:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 199,
                      "src": "1531:24:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ApplyRights_$655_memory_ptr",
                        "typeString": "struct ApplyRights"
                      },
                      "typeName": {
                        "id": 139,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 138,
                          "name": "ApplyRights",
                          "nameLocations": [
                            "1531:11:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 655,
                          "src": "1531:11:0"
                        },
                        "referencedDeclaration": 655,
                        "src": "1531:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ApplyRights_$655_storage_ptr",
                          "typeString": "struct ApplyRights"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 144,
                  "initialValue": {
                    "baseExpression": {
                      "id": 141,
                      "name": "rights",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "1558:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ApplyRights_$655_storage_$",
                        "typeString": "mapping(address => struct ApplyRights storage ref)"
                      }
                    },
                    "id": 143,
                    "indexExpression": {
                      "id": 142,
                      "name": "broker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "1565:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1558:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ApplyRights_$655_storage",
                      "typeString": "struct ApplyRights storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1531:41:0"
                },
                {
                  "assignments": [
                    146
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 146,
                      "mutability": "mutable",
                      "name": "_expired",
                      "nameLocation": "1588:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 199,
                      "src": "1583:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 145,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1583:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 147,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1583:13:0"
                },
                {
                  "assignments": [
                    149
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 149,
                      "mutability": "mutable",
                      "name": "payMode",
                      "nameLocation": "1612:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 199,
                      "src": "1606:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 148,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "1606:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 152,
                  "initialValue": {
                    "expression": {
                      "id": 150,
                      "name": "right",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "1622:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ApplyRights_$655_memory_ptr",
                        "typeString": "struct ApplyRights memory"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1628:7:0",
                    "memberName": "payMode",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 652,
                    "src": "1622:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1606:29:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 153,
                        "name": "right",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "1649:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ApplyRights_$655_memory_ptr",
                          "typeString": "struct ApplyRights memory"
                        }
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1655:4:0",
                      "memberName": "time",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 654,
                      "src": "1649:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1663:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1649:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 162,
                  "nodeType": "IfStatement",
                  "src": "1645:68:0",
                  "trueBody": {
                    "id": 161,
                    "nodeType": "Block",
                    "src": "1666:47:0",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "74727565",
                              "id": 157,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1688:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "id": 158,
                              "name": "payMode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 149,
                              "src": "1694:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "id": 159,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1687:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_uint8_$",
                            "typeString": "tuple(bool,uint8)"
                          }
                        },
                        "functionReturnParameters": 137,
                        "id": 160,
                        "nodeType": "Return",
                        "src": "1680:22:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 163,
                      "name": "payMode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "1726:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1737:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1726:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 178,
                  "nodeType": "IfStatement",
                  "src": "1722:96:0",
                  "trueBody": {
                    "id": 177,
                    "nodeType": "Block",
                    "src": "1740:78:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 166,
                            "name": "_expired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1754:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 173,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 171,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 167,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967292,
                                      "src": "1766:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 168,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "1772:9:0",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "1766:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 169,
                                      "name": "right",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 140,
                                      "src": "1784:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ApplyRights_$655_memory_ptr",
                                        "typeString": "struct ApplyRights memory"
                                      }
                                    },
                                    "id": 170,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "1790:4:0",
                                    "memberName": "time",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 654,
                                    "src": "1784:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1766:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "hexValue": "3331353336303030",
                                  "id": 172,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1798:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_31536000_by_1",
                                    "typeString": "int_const 31536000"
                                  },
                                  "value": "31536000"
                                },
                                "src": "1766:40:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 174,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1765:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1754:53:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 176,
                        "nodeType": "ExpressionStatement",
                        "src": "1754:53:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 179,
                      "name": "payMode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "1831:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1842:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "1831:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 194,
                  "nodeType": "IfStatement",
                  "src": "1827:95:0",
                  "trueBody": {
                    "id": 193,
                    "nodeType": "Block",
                    "src": "1845:77:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 182,
                            "name": "_expired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1859:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 187,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 183,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967292,
                                      "src": "1871:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 184,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "1877:9:0",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "1871:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 185,
                                      "name": "right",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 140,
                                      "src": "1889:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ApplyRights_$655_memory_ptr",
                                        "typeString": "struct ApplyRights memory"
                                      }
                                    },
                                    "id": 186,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "1895:4:0",
                                    "memberName": "time",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 654,
                                    "src": "1889:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1871:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "hexValue": "32363738343030",
                                  "id": 188,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1903:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2678400_by_1",
                                    "typeString": "int_const 2678400"
                                  },
                                  "value": "2678400"
                                },
                                "src": "1871:39:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 190,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1870:41:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1859:52:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 192,
                        "nodeType": "ExpressionStatement",
                        "src": "1859:52:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 195,
                        "name": "_expired",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "1939:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 196,
                        "name": "payMode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "1949:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 197,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1938:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint8_$",
                      "typeString": "tuple(bool,uint8)"
                    }
                  },
                  "functionReturnParameters": 137,
                  "id": 198,
                  "nodeType": "Return",
                  "src": "1931:26:0"
                }
              ]
            },
            "functionSelector": "ba2eb541",
            "id": 200,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isExpired",
            "nameLocation": "1438:9:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 132,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1490:8:0"
            },
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "broker",
                  "nameLocation": "1465:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "1457:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1457:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1447:30:0"
            },
            "returnParameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "1508:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1508:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "1514:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1514:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1507:13:0"
            },
            "scope": 532,
            "src": "1429:535:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              603
            ],
            "body": {
              "id": 212,
              "nodeType": "Block",
              "src": "2031:45:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 208,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "2056:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GamblingContractFactory_$532",
                            "typeString": "contract GamblingContractFactory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_GamblingContractFactory_$532",
                            "typeString": "contract GamblingContractFactory"
                          }
                        ],
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2048:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 206,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2048:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2048:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2062:7:0",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "2048:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 205,
                  "id": 211,
                  "nodeType": "Return",
                  "src": "2041:28:0"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 213,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "1979:10:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 202,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2004:8:0"
            },
            "parameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1989:2:0"
            },
            "returnParameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 204,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "2022:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2022:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2021:9:0"
            },
            "scope": 532,
            "src": "1970:106:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              608
            ],
            "body": {
              "id": 224,
              "nodeType": "Block",
              "src": "2143:37:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 221,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "2168:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GamblingContractFactory_$532",
                          "typeString": "contract GamblingContractFactory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_GamblingContractFactory_$532",
                          "typeString": "contract GamblingContractFactory"
                        }
                      ],
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2160:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 219,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2160:7:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2160:13:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 218,
                  "id": 223,
                  "nodeType": "Return",
                  "src": "2153:20:0"
                }
              ]
            },
            "functionSelector": "38cc4831",
            "id": 225,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddress",
            "nameLocation": "2091:10:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 215,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2116:8:0"
            },
            "parameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2101:2:0"
            },
            "returnParameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 217,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 225,
                  "src": "2134:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2134:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2133:9:0"
            },
            "scope": 532,
            "src": "2082:98:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              613
            ],
            "body": {
              "id": 233,
              "nodeType": "Block",
              "src": "2249:33:0",
              "statements": [
                {
                  "expression": {
                    "id": 231,
                    "name": "annualFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29,
                    "src": "2266:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 230,
                  "id": 232,
                  "nodeType": "Return",
                  "src": "2259:16:0"
                }
              ]
            },
            "functionSelector": "cca746df",
            "id": 234,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAnnualFee",
            "nameLocation": "2195:12:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 227,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2222:8:0"
            },
            "parameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2207:2:0"
            },
            "returnParameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 229,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "2240:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2240:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2239:9:0"
            },
            "scope": 532,
            "src": "2186:96:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              618
            ],
            "body": {
              "id": 242,
              "nodeType": "Block",
              "src": "2352:34:0",
              "statements": [
                {
                  "expression": {
                    "id": 240,
                    "name": "monthlyFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32,
                    "src": "2369:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 239,
                  "id": 241,
                  "nodeType": "Return",
                  "src": "2362:17:0"
                }
              ]
            },
            "functionSelector": "48532767",
            "id": 243,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMonthlyFee",
            "nameLocation": "2297:13:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 236,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2325:8:0"
            },
            "parameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2310:2:0"
            },
            "returnParameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 238,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "2343:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2343:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2342:9:0"
            },
            "scope": 532,
            "src": "2288:98:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              562
            ],
            "body": {
              "id": 262,
              "nodeType": "Block",
              "src": "2459:105:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 252,
                          "name": "_annualFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 245,
                          "src": "2477:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2490:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2477:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416e6e75616c206665652063616e6e6f74206265206e65676174697665",
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2493:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bee9d69676824cd47594f29b816a34f80ebb3352835550f105e265355977e242",
                          "typeString": "literal_string \"Annual fee cannot be negative\""
                        },
                        "value": "Annual fee cannot be negative"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bee9d69676824cd47594f29b816a34f80ebb3352835550f105e265355977e242",
                          "typeString": "literal_string \"Annual fee cannot be negative\""
                        }
                      ],
                      "id": 251,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2469:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2469:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 257,
                  "nodeType": "ExpressionStatement",
                  "src": "2469:56:0"
                },
                {
                  "expression": {
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 258,
                      "name": "annualFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "2535:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 259,
                      "name": "_annualFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "2547:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2535:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "2535:22:0"
                }
              ]
            },
            "functionSelector": "88b89a7d",
            "id": 263,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 249,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 248,
                  "name": "onlyRoot",
                  "nameLocations": [
                    "2450:8:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53,
                  "src": "2450:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2450:8:0"
              }
            ],
            "name": "setAnnualFee",
            "nameLocation": "2401:12:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 247,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2441:8:0"
            },
            "parameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 245,
                  "mutability": "mutable",
                  "name": "_annualFee",
                  "nameLocation": "2422:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "2414:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2414:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2413:20:0"
            },
            "returnParameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2459:0:0"
            },
            "scope": 532,
            "src": "2392:172:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              567
            ],
            "body": {
              "id": 282,
              "nodeType": "Block",
              "src": "2639:109:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 272,
                          "name": "_monthlyFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 265,
                          "src": "2657:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2671:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2657:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6f6e74686c79206665652063616e6e6f74206265206e65676174697665",
                        "id": 275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2674:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ac1d00b7fe603401716618a57df1a36661330b53c4069cba0ac68126d3f79ea",
                          "typeString": "literal_string \"Monthly fee cannot be negative\""
                        },
                        "value": "Monthly fee cannot be negative"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9ac1d00b7fe603401716618a57df1a36661330b53c4069cba0ac68126d3f79ea",
                          "typeString": "literal_string \"Monthly fee cannot be negative\""
                        }
                      ],
                      "id": 271,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2649:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2649:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 277,
                  "nodeType": "ExpressionStatement",
                  "src": "2649:58:0"
                },
                {
                  "expression": {
                    "id": 280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 278,
                      "name": "monthlyFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "2717:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 279,
                      "name": "_monthlyFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 265,
                      "src": "2730:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2717:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 281,
                  "nodeType": "ExpressionStatement",
                  "src": "2717:24:0"
                }
              ]
            },
            "functionSelector": "ad450f2a",
            "id": 283,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 269,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 268,
                  "name": "onlyRoot",
                  "nameLocations": [
                    "2630:8:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53,
                  "src": "2630:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2630:8:0"
              }
            ],
            "name": "setMonthlyFee",
            "nameLocation": "2579:13:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 267,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2621:8:0"
            },
            "parameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "mutability": "mutable",
                  "name": "_monthlyFee",
                  "nameLocation": "2601:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 283,
                  "src": "2593:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2593:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2592:21:0"
            },
            "returnParameters": {
              "id": 270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2639:0:0"
            },
            "scope": 532,
            "src": "2570:178:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              541
            ],
            "body": {
              "id": 396,
              "nodeType": "Block",
              "src": "2859:986:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 295,
                            "name": "_broker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 285,
                            "src": "2904:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 294,
                          "name": "isValidBroker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 128,
                          "src": "2890:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2890:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41636365737320746f20626c696e6420626f786573206973206e6f7420616c6c6f77656420616e64206d7573742062652070616964206f722065787069726564",
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2926:66:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d85f97a0876d62269ac7009ae9894019ae1e1e6933e1240d96bea89a4f8deda4",
                          "typeString": "literal_string \"Access to blind boxes is not allowed and must be paid or expired\""
                        },
                        "value": "Access to blind boxes is not allowed and must be paid or expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d85f97a0876d62269ac7009ae9894019ae1e1e6933e1240d96bea89a4f8deda4",
                          "typeString": "literal_string \"Access to blind boxes is not allowed and must be paid or expired\""
                        }
                      ],
                      "id": 293,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2869:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2869:133:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "2869:133:0"
                },
                {
                  "assignments": [
                    302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 302,
                      "mutability": "mutable",
                      "name": "blindBox",
                      "nameLocation": "3029:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 396,
                      "src": "3013:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OddsdexContract_$3143",
                        "typeString": "contract OddsdexContract"
                      },
                      "typeName": {
                        "id": 301,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 300,
                          "name": "OddsdexContract",
                          "nameLocations": [
                            "3013:15:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3143,
                          "src": "3013:15:0"
                        },
                        "referencedDeclaration": 3143,
                        "src": "3013:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OddsdexContract_$3143",
                          "typeString": "contract OddsdexContract"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 309,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 306,
                        "name": "root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "3060:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 307,
                        "name": "_broker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "3066:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3040:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_OddsdexContract_$3143_$",
                        "typeString": "function (address,address) returns (contract OddsdexContract)"
                      },
                      "typeName": {
                        "id": 304,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 303,
                          "name": "OddsdexContract",
                          "nameLocations": [
                            "3044:15:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3143,
                          "src": "3044:15:0"
                        },
                        "referencedDeclaration": 3143,
                        "src": "3044:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OddsdexContract_$3143",
                          "typeString": "contract OddsdexContract"
                        }
                      }
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3040:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OddsdexContract_$3143",
                      "typeString": "contract OddsdexContract"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3013:61:0"
                },
                {
                  "assignments": [
                    311
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 311,
                      "mutability": "mutable",
                      "name": "blindBoxAddress",
                      "nameLocation": "3092:15:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 396,
                      "src": "3084:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 310,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3084:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 316,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 314,
                        "name": "blindBox",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "3118:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OddsdexContract_$3143",
                          "typeString": "contract OddsdexContract"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_OddsdexContract_$3143",
                          "typeString": "contract OddsdexContract"
                        }
                      ],
                      "id": 313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3110:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 312,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3110:7:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3110:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3084:43:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 320,
                        "name": "blindBoxAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "3152:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 317,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "3137:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3147:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3137:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3137:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "3137:31:0"
                },
                {
                  "assignments": [
                    327
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 327,
                      "mutability": "mutable",
                      "name": "contractAddressArr",
                      "nameLocation": "3196:18:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 396,
                      "src": "3178:36:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 325,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3178:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 326,
                        "nodeType": "ArrayTypeName",
                        "src": "3178:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 331,
                  "initialValue": {
                    "baseExpression": {
                      "id": 328,
                      "name": "contractsOfBroker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "3217:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 330,
                    "indexExpression": {
                      "id": 329,
                      "name": "_broker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 285,
                      "src": "3235:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3217:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3178:65:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 335,
                        "name": "blindBoxAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "3277:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 332,
                        "name": "contractAddressArr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 327,
                        "src": "3253:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[] storage pointer"
                        }
                      },
                      "id": 334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3272:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3253:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3253:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "3253:40:0"
                },
                {
                  "assignments": [
                    339
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 339,
                      "mutability": "mutable",
                      "name": "foundKey",
                      "nameLocation": "3308:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 396,
                      "src": "3303:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 338,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3303:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 341,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3319:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3303:21:0"
                },
                {
                  "body": {
                    "id": 365,
                    "nodeType": "Block",
                    "src": "3376:122:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 353,
                              "name": "brokers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "3394:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 355,
                            "indexExpression": {
                              "id": 354,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 343,
                              "src": "3402:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3394:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 356,
                            "name": "_broker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 285,
                            "src": "3408:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3394:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 364,
                        "nodeType": "IfStatement",
                        "src": "3390:98:0",
                        "trueBody": {
                          "id": 363,
                          "nodeType": "Block",
                          "src": "3417:71:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 358,
                                  "name": "foundKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 339,
                                  "src": "3435:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 359,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3446:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "3435:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 361,
                              "nodeType": "ExpressionStatement",
                              "src": "3435:15:0"
                            },
                            {
                              "id": 362,
                              "nodeType": "Break",
                              "src": "3468:5:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 346,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 343,
                      "src": "3351:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 347,
                        "name": "brokers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "3355:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3363:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3355:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3351:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 366,
                  "initializationExpression": {
                    "assignments": [
                      343
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 343,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3344:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 366,
                        "src": "3339:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 342,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3339:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 345,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3348:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3339:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3371:3:0",
                      "subExpression": {
                        "id": 350,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 343,
                        "src": "3371:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 352,
                    "nodeType": "ExpressionStatement",
                    "src": "3371:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "3334:164:0"
                },
                {
                  "condition": {
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3511:9:0",
                    "subExpression": {
                      "id": 367,
                      "name": "foundKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 339,
                      "src": "3512:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 376,
                  "nodeType": "IfStatement",
                  "src": "3507:61:0",
                  "trueBody": {
                    "id": 375,
                    "nodeType": "Block",
                    "src": "3522:46:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 372,
                              "name": "_broker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 285,
                              "src": "3549:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 369,
                              "name": "brokers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "3536:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3544:4:0",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3536:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3536:21:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 374,
                        "nodeType": "ExpressionStatement",
                        "src": "3536:21:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    379
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 379,
                      "mutability": "mutable",
                      "name": "cgcm",
                      "nameLocation": "3613:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 396,
                      "src": "3577:40:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CreateOddsdexContractMessage_$648_memory_ptr",
                        "typeString": "struct CreateOddsdexContractMessage"
                      },
                      "typeName": {
                        "id": 378,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 377,
                          "name": "CreateOddsdexContractMessage",
                          "nameLocations": [
                            "3577:28:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 648,
                          "src": "3577:28:0"
                        },
                        "referencedDeclaration": 648,
                        "src": "3577:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CreateOddsdexContractMessage_$648_storage_ptr",
                          "typeString": "struct CreateOddsdexContractMessage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 389,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 381,
                        "name": "blindBoxAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "3662:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 382,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3691:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3695:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3691:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 384,
                        "name": "_broker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "3715:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 385,
                          "name": "rights",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "3736:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ApplyRights_$655_storage_$",
                            "typeString": "mapping(address => struct ApplyRights storage ref)"
                          }
                        },
                        "id": 387,
                        "indexExpression": {
                          "id": 386,
                          "name": "_broker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 285,
                          "src": "3743:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3736:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ApplyRights_$655_storage",
                          "typeString": "struct ApplyRights storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ApplyRights_$655_storage",
                          "typeString": "struct ApplyRights storage ref"
                        }
                      ],
                      "id": 380,
                      "name": "CreateOddsdexContractMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 648,
                      "src": "3620:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_CreateOddsdexContractMessage_$648_storage_ptr_$",
                        "typeString": "type(struct CreateOddsdexContractMessage storage pointer)"
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3620:141:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CreateOddsdexContractMessage_$648_memory_ptr",
                      "typeString": "struct CreateOddsdexContractMessage memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3577:184:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 391,
                        "name": "cgcm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 379,
                        "src": "3801:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CreateOddsdexContractMessage_$648_memory_ptr",
                          "typeString": "struct CreateOddsdexContractMessage memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_CreateOddsdexContractMessage_$648_memory_ptr",
                          "typeString": "struct CreateOddsdexContractMessage memory"
                        }
                      ],
                      "id": 390,
                      "name": "OnCreateOddsdexContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 637,
                      "src": "3777:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_CreateOddsdexContractMessage_$648_memory_ptr_$returns$__$",
                        "typeString": "function (struct CreateOddsdexContractMessage memory)"
                      }
                    },
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3777:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 393,
                  "nodeType": "EmitStatement",
                  "src": "3772:34:0"
                },
                {
                  "expression": {
                    "id": 394,
                    "name": "blindBoxAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 311,
                    "src": "3823:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 292,
                  "id": 395,
                  "nodeType": "Return",
                  "src": "3816:22:0"
                }
              ]
            },
            "functionSelector": "90405a3e",
            "id": 397,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 289,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 288,
                  "name": "onlyRoot",
                  "nameLocations": [
                    "2832:8:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53,
                  "src": "2832:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2832:8:0"
              }
            ],
            "name": "createOddsdexContract",
            "nameLocation": "2763:21:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 287,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2823:8:0"
            },
            "parameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 285,
                  "mutability": "mutable",
                  "name": "_broker",
                  "nameLocation": "2802:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "2794:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 284,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2794:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2784:31:0"
            },
            "returnParameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 291,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "2850:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 290,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2850:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2849:9:0"
            },
            "scope": 532,
            "src": "2754:1091:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              629
            ],
            "body": {
              "id": 427,
              "nodeType": "Block",
              "src": "3904:169:0",
              "statements": [
                {
                  "assignments": [
                    404,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 404,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "3920:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 427,
                      "src": "3915:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 403,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3915:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 421,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4005:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "3995:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 416,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "3999:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3995:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 407,
                              "name": "root",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "3941:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3933:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 405,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3933:8:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3933:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3947:4:0",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "3933:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 412,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "3967:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GamblingContractFactory_$532",
                                  "typeString": "contract GamblingContractFactory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GamblingContractFactory_$532",
                                  "typeString": "contract GamblingContractFactory"
                                }
                              ],
                              "id": 411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3959:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 410,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3959:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3959:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3973:7:0",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "3959:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "3933:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3933:84:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3914:103:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 423,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 404,
                        "src": "4035:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4554485f5452414e534645525f4641494c4544",
                        "id": 424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4044:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d383913ea1996930a2623a0d739b8fc033c734c1d71d4759d3ccba1d3a719c29",
                          "typeString": "literal_string \"ETH_TRANSFER_FAILED\""
                        },
                        "value": "ETH_TRANSFER_FAILED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d383913ea1996930a2623a0d739b8fc033c734c1d71d4759d3ccba1d3a719c29",
                          "typeString": "literal_string \"ETH_TRANSFER_FAILED\""
                        }
                      ],
                      "id": 422,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4027:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4027:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 426,
                  "nodeType": "ExpressionStatement",
                  "src": "4027:39:0"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 428,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 401,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 400,
                  "name": "onlyRoot",
                  "nameLocations": [
                    "3895:8:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53,
                  "src": "3895:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3895:8:0"
              }
            ],
            "name": "withdraw",
            "nameLocation": "3860:8:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 399,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3886:8:0"
            },
            "parameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3868:2:0"
            },
            "returnParameters": {
              "id": 402,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3904:0:0"
            },
            "scope": 532,
            "src": "3851:222:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 436,
              "nodeType": "Block",
              "src": "4107:59:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4125:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4e6f206f746865722063616c6c7320737570706f72746564",
                        "id": 433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4132:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f34cad5094e5c2b73dd3ef7210fda01cdc4b9415a4abb84e67b74eb1a65a185d",
                          "typeString": "literal_string \"No other calls supported\""
                        },
                        "value": "No other calls supported"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f34cad5094e5c2b73dd3ef7210fda01cdc4b9415a4abb84e67b74eb1a65a185d",
                          "typeString": "literal_string \"No other calls supported\""
                        }
                      ],
                      "id": 431,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4117:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4117:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 435,
                  "nodeType": "ExpressionStatement",
                  "src": "4117:42:0"
                }
              ]
            },
            "id": 437,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4087:2:0"
            },
            "returnParameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4107:0:0"
            },
            "scope": 532,
            "src": "4079:87:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 461,
              "nodeType": "Block",
              "src": "4276:204:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 442,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4307:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4311:5:0",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4307:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 444,
                          "name": "annualFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "4320:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4307:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206665652073686f756c64206265206174206c6561737420657175616c20746f2074686520616e6e75616c20666565",
                        "id": 446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4343:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4a6141404791fabb15ebaa5876bb87a521d4d5e288e97aa43f5c978063fae66e",
                          "typeString": "literal_string \"The fee should be at least equal to the annual fee\""
                        },
                        "value": "The fee should be at least equal to the annual fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4a6141404791fabb15ebaa5876bb87a521d4d5e288e97aa43f5c978063fae66e",
                          "typeString": "literal_string \"The fee should be at least equal to the annual fee\""
                        }
                      ],
                      "id": 441,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4286:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4286:119:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 448,
                  "nodeType": "ExpressionStatement",
                  "src": "4286:119:0"
                },
                {
                  "expression": {
                    "id": 459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 449,
                        "name": "rights",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "4415:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ApplyRights_$655_storage_$",
                          "typeString": "mapping(address => struct ApplyRights storage ref)"
                        }
                      },
                      "id": 452,
                      "indexExpression": {
                        "expression": {
                          "id": 450,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4422:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4426:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4422:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4415:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ApplyRights_$655_storage",
                        "typeString": "struct ApplyRights storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "74727565",
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4448:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "hexValue": "31",
                          "id": 455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4454:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "expression": {
                            "id": 456,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "4457:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4463:9:0",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4457:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 453,
                        "name": "ApplyRights",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 655,
                        "src": "4436:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ApplyRights_$655_storage_ptr_$",
                          "typeString": "type(struct ApplyRights storage pointer)"
                        }
                      },
                      "id": 458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4436:37:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ApplyRights_$655_memory_ptr",
                        "typeString": "struct ApplyRights memory"
                      }
                    },
                    "src": "4415:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ApplyRights_$655_storage",
                      "typeString": "struct ApplyRights storage ref"
                    }
                  },
                  "id": 460,
                  "nodeType": "ExpressionStatement",
                  "src": "4415:58:0"
                }
              ]
            },
            "documentation": {
              "id": 438,
              "nodeType": "StructuredDocumentation",
              "src": "4172:72:0",
              "text": "@dev The default payment method is only used for charging annual fees"
            },
            "id": 462,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4256:2:0"
            },
            "returnParameters": {
              "id": 440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4276:0:0"
            },
            "scope": 532,
            "src": "4249:231:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              632
            ],
            "body": {
              "id": 486,
              "nodeType": "Block",
              "src": "4536:206:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 467,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4567:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4571:5:0",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4567:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 469,
                          "name": "monthlyFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "4580:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4567:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206665652073686f756c64206265206174206c6561737420657175616c20746f20746865206d6f6e74686c7920666565",
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4604:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_766ac243563fb571ecb13fa7cab6e795cd51532cc31b70c76841407e2e7e92ba",
                          "typeString": "literal_string \"The fee should be at least equal to the monthly fee\""
                        },
                        "value": "The fee should be at least equal to the monthly fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_766ac243563fb571ecb13fa7cab6e795cd51532cc31b70c76841407e2e7e92ba",
                          "typeString": "literal_string \"The fee should be at least equal to the monthly fee\""
                        }
                      ],
                      "id": 466,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4546:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4546:121:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 473,
                  "nodeType": "ExpressionStatement",
                  "src": "4546:121:0"
                },
                {
                  "expression": {
                    "id": 484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 474,
                        "name": "rights",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "4677:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ApplyRights_$655_storage_$",
                          "typeString": "mapping(address => struct ApplyRights storage ref)"
                        }
                      },
                      "id": 477,
                      "indexExpression": {
                        "expression": {
                          "id": 475,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4684:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4688:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4684:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4677:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ApplyRights_$655_storage",
                        "typeString": "struct ApplyRights storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "74727565",
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4710:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "hexValue": "32",
                          "id": 480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4716:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        {
                          "expression": {
                            "id": 481,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "4719:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4725:9:0",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4719:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 478,
                        "name": "ApplyRights",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 655,
                        "src": "4698:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ApplyRights_$655_storage_ptr_$",
                          "typeString": "type(struct ApplyRights storage pointer)"
                        }
                      },
                      "id": 483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4698:37:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ApplyRights_$655_memory_ptr",
                        "typeString": "struct ApplyRights memory"
                      }
                    },
                    "src": "4677:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ApplyRights_$655_storage",
                      "typeString": "struct ApplyRights storage ref"
                    }
                  },
                  "id": 485,
                  "nodeType": "ExpressionStatement",
                  "src": "4677:58:0"
                }
              ]
            },
            "functionSelector": "1ec22778",
            "id": 487,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recMothlyFee",
            "nameLocation": "4495:12:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 464,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4527:8:0"
            },
            "parameters": {
              "id": 463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4507:2:0"
            },
            "returnParameters": {
              "id": 465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4536:0:0"
            },
            "scope": 532,
            "src": "4486:256:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              546
            ],
            "body": {
              "id": 496,
              "nodeType": "Block",
              "src": "4813:38:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 493,
                      "name": "brokers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "4830:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4838:6:0",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "4830:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 492,
                  "id": 495,
                  "nodeType": "Return",
                  "src": "4823:21:0"
                }
              ]
            },
            "functionSelector": "80820523",
            "id": 497,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBrokerCount",
            "nameLocation": "4757:14:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 489,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4786:8:0"
            },
            "parameters": {
              "id": 488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4771:2:0"
            },
            "returnParameters": {
              "id": 492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 491,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 497,
                  "src": "4804:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 490,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4804:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4803:9:0"
            },
            "scope": 532,
            "src": "4748:103:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              551
            ],
            "body": {
              "id": 506,
              "nodeType": "Block",
              "src": "4923:40:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 503,
                      "name": "contracts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "4940:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4950:6:0",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "4940:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 502,
                  "id": 505,
                  "nodeType": "Return",
                  "src": "4933:23:0"
                }
              ]
            },
            "functionSelector": "10b47ef3",
            "id": 507,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOddsdexCount",
            "nameLocation": "4866:15:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 499,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4896:8:0"
            },
            "parameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4881:2:0"
            },
            "returnParameters": {
              "id": 502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 501,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 507,
                  "src": "4914:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 500,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4914:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4913:9:0"
            },
            "scope": 532,
            "src": "4857:106:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              557
            ],
            "body": {
              "id": 516,
              "nodeType": "Block",
              "src": "5039:31:0",
              "statements": [
                {
                  "expression": {
                    "id": 514,
                    "name": "brokers",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21,
                    "src": "5056:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 513,
                  "id": 515,
                  "nodeType": "Return",
                  "src": "5049:14:0"
                }
              ]
            },
            "functionSelector": "10c0b899",
            "id": 517,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enumBroker",
            "nameLocation": "4978:10:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 509,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5003:8:0"
            },
            "parameters": {
              "id": 508,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4988:2:0"
            },
            "returnParameters": {
              "id": 513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 512,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 517,
                  "src": "5021:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 510,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5021:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 511,
                    "nodeType": "ArrayTypeName",
                    "src": "5021:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5020:18:0"
            },
            "scope": 532,
            "src": "4969:101:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              626
            ],
            "body": {
              "id": 530,
              "nodeType": "Block",
              "src": "5184:49:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 526,
                      "name": "contractsOfBroker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "5201:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 528,
                    "indexExpression": {
                      "id": 527,
                      "name": "broker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 519,
                      "src": "5219:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5201:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 525,
                  "id": 529,
                  "nodeType": "Return",
                  "src": "5194:32:0"
                }
              ]
            },
            "functionSelector": "1214abd0",
            "id": 531,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "listContractOfBroker",
            "nameLocation": "5085:20:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 521,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5148:8:0"
            },
            "parameters": {
              "id": 520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 519,
                  "mutability": "mutable",
                  "name": "broker",
                  "nameLocation": "5123:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 531,
                  "src": "5115:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5115:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5105:30:0"
            },
            "returnParameters": {
              "id": 525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 524,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 531,
                  "src": "5166:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 522,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5166:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 523,
                    "nodeType": "ArrayTypeName",
                    "src": "5166:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5165:18:0"
            },
            "scope": 532,
            "src": "5076:157:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 533,
        "src": "165:5070:0",
        "usedErrors": []
      }
    ],
    "src": "32:5204:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {
    "1338": {
      "events": {},
      "links": {},
      "address": "0x331BC11227cB7925F90E37949590a34A876464F9",
      "transactionHash": "0x222311ea55e95e74a107e6717705f616c5cb70833290f95de001d45e4f0fc63b"
    }
  },
  "schemaVersion": "3.4.14",
  "updatedAt": "2023-08-28T04:42:49.142Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}